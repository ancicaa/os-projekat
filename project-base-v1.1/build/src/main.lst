GAS LISTING /tmp/ccLVL84K.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB39:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/riscv.hpp"
   2:src/main.cpp  **** #include "../h/syscall_c.hpp"
   3:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   4:src/main.cpp  **** #include "../lib/console.h"
   5:src/main.cpp  **** #include "../lib/hw.h"
   6:src/main.cpp  **** #include "../h/printing.hpp"
   7:src/main.cpp  **** #include "../h/TCB.hpp"
   8:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   9:src/main.cpp  **** 
  10:src/main.cpp  **** extern "C" void rutina();
  11:src/main.cpp  **** 
  12:src/main.cpp  **** extern void userMain();
  13:src/main.cpp  **** 
  14:src/main.cpp  **** class Thread1 : public Thread {
  15:src/main.cpp  **** public:
  16:src/main.cpp  ****     Thread1(char letter) : Thread() {
  17:src/main.cpp  ****         this->letter = letter;
  18:src/main.cpp  ****     }
  19:src/main.cpp  ****     void run() override {
  20:src/main.cpp  ****         for(int i = 0; i < 1000; i++) {
  21:src/main.cpp  ****             putc(letter);
  22:src/main.cpp  ****             thread_dispatch();
  23:src/main.cpp  ****         }
  24:src/main.cpp  ****     }
  25:src/main.cpp  **** private:
  26:src/main.cpp  ****     char letter;
  27:src/main.cpp  **** };
  28:src/main.cpp  **** 
  29:src/main.cpp  **** int main() {
  12              		.loc 1 29 12
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040102 		addi	s0,sp,32
  21              		.cfi_def_cfa 8, 0
  30:src/main.cpp  ****     MemoryAllocator::init();
  22              		.loc 1 30 5
  23              		.loc 1 30 26 is_stmt 0
  24 0010 97000000 		call	_ZN15MemoryAllocator4initEv@plt
  24      E7800000 
  25              	.LVL0:
  31:src/main.cpp  ****     Riscv::w_stvec((uint64) rutina);// upis adrese prekidne rutinina
  26              		.loc 1 31 5 is_stmt 1
GAS LISTING /tmp/ccLVL84K.s 			page 2


  27              		.loc 1 31 19 is_stmt 0
  28 0018 97070000 		la	a5,rutina
  28      83B70700 
  29              	.LVL1:
  30              	.LBB4:
  31              	.LBB5:
  32              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv{
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp ****     static void obradaprekida(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4);
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****   static void pushRegisters();
  12:src/../h/riscv.hpp ****   static void popRegisters();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccLVL84K.s 			page 3


  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //stvec Vector "table"
  83:src/../h/riscv.hpp ****     static void stvecVectorTable();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a0 register
  86:src/../h/riscv.hpp ****     static uint64 r_a0();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write to a0 register
  89:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** private:
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     // supervisor trap handler
  95:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 100:src/../h/riscv.hpp **** };
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 104:src/../h/riscv.hpp **** {
 105:src/../h/riscv.hpp ****     uint64 volatile scause;
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 107:src/../h/riscv.hpp ****     return scause;
GAS LISTING /tmp/ccLVL84K.s 			page 4


 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 116:src/../h/riscv.hpp **** {
 117:src/../h/riscv.hpp ****     uint64 volatile sepc;
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 119:src/../h/riscv.hpp ****     return sepc;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 128:src/../h/riscv.hpp **** {
 129:src/../h/riscv.hpp ****     uint64 volatile stvec;
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 131:src/../h/riscv.hpp ****     return stvec;
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  33              		.loc 2 136 5 is_stmt 1
  34              		.loc 2 136 69 is_stmt 0
  35              	#APP
  36              	# 136 "src/../h/riscv.hpp" 1
 137              	}
  37              		csrw stvec, a5
  38              	# 0 "" 2
  39              	.LVL2:
  40              	#NO_APP
  41              	.LBE5:
  42              	.LBE4:
  32:src/main.cpp  **** 
  33:src/main.cpp  ****     thread_t main_handle;
  43              		.loc 1 33 5 is_stmt 1
  34:src/main.cpp  ****     thread_create(&main_handle, nullptr, nullptr);
  44              		.loc 1 34 5
  45              		.loc 1 34 18 is_stmt 0
  46 0024 13060000 		li	a2,0
  47 0028 93050000 		li	a1,0
  48 002c 130584FE 		addi	a0,s0,-24
  49 0030 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  49      E7800000 
  50              	.LVL3:
  35:src/main.cpp  **** 
  36:src/main.cpp  ****     thread_t um_handle;
  51              		.loc 1 36 5 is_stmt 1
  37:src/main.cpp  ****     thread_create(&um_handle, reinterpret_cast<void (*)(void *)>(userMain), nullptr);
  52              		.loc 1 37 5
GAS LISTING /tmp/ccLVL84K.s 			page 5


  53              		.loc 1 37 18 is_stmt 0
  54 0038 13060000 		li	a2,0
  55 003c 97050000 		la	a1,_Z8userMainv
  55      83B50500 
  56 0044 130504FE 		addi	a0,s0,-32
  57 0048 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  57      E7800000 
  58              	.LVL4:
  38:src/main.cpp  ****     thread_join(um_handle);
  59              		.loc 1 38 5 is_stmt 1
  60              		.loc 1 38 16 is_stmt 0
  61 0050 033504FE 		ld	a0,-32(s0)
  62 0054 97000000 		call	_Z11thread_joinP3TCB@plt
  62      E7800000 
  63              	.LVL5:
  39:src/main.cpp  **** 
  40:src/main.cpp  ****     return 0;
  64              		.loc 1 40 5 is_stmt 1
  41:src/main.cpp  **** }
  65              		.loc 1 41 1 is_stmt 0
  66 005c 13050000 		li	a0,0
  67 0060 83308101 		ld	ra,24(sp)
  68              		.cfi_restore 1
  69 0064 03340101 		ld	s0,16(sp)
  70              		.cfi_restore 8
  71              		.cfi_def_cfa 2, 32
  72 0068 13010102 		addi	sp,sp,32
  73              		.cfi_def_cfa_offset 0
  74 006c 67800000 		jr	ra
  75              		.cfi_endproc
  76              	.LFE39:
  78              	.Letext0:
  79              		.file 3 "src/../h/../lib/hw.h"
  80              		.file 4 "src/../h/syscall_c.hpp"
  81              		.file 5 "src/../h/TCB.hpp"
  82              		.file 6 "src/../h/MemoryAllocator.hpp"
  83              		.file 7 "src/../h/list.hpp"
GAS LISTING /tmp/ccLVL84K.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccLVL84K.s:9      .text:0000000000000000 main
     /tmp/ccLVL84K.s:13     .text:0000000000000000 .L0 
     /tmp/ccLVL84K.s:14     .text:0000000000000000 .L0 
     /tmp/ccLVL84K.s:15     .text:0000000000000004 .L0 
     /tmp/ccLVL84K.s:18     .text:000000000000000c .L0 
     /tmp/ccLVL84K.s:19     .text:000000000000000c .L0 
     /tmp/ccLVL84K.s:21     .text:0000000000000010 .L0 
     /tmp/ccLVL84K.s:23     .text:0000000000000010 .L0 
     /tmp/ccLVL84K.s:24     .text:0000000000000010 .L0 
     /tmp/ccLVL84K.s:27     .text:0000000000000018 .L0 
     /tmp/ccLVL84K.s:28     .text:0000000000000018 .L0 
     /tmp/ccLVL84K.s:34     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:136    .text:0000000000000020 .L0 
     /tmp/ccLVL84K.s:44     .text:0000000000000024 .L0 
     /tmp/ccLVL84K.s:45     .text:0000000000000024 .L0 
     /tmp/ccLVL84K.s:46     .text:0000000000000024 .L0 
     /tmp/ccLVL84K.s:52     .text:0000000000000038 .L0 
     /tmp/ccLVL84K.s:53     .text:0000000000000038 .L0 
     /tmp/ccLVL84K.s:54     .text:0000000000000038 .L0 
     /tmp/ccLVL84K.s:60     .text:0000000000000050 .L0 
     /tmp/ccLVL84K.s:61     .text:0000000000000050 .L0 
     /tmp/ccLVL84K.s:65     .text:000000000000005c .L0 
     /tmp/ccLVL84K.s:66     .text:000000000000005c .L0 
     /tmp/ccLVL84K.s:68     .text:0000000000000064 .L0 
     /tmp/ccLVL84K.s:70     .text:0000000000000068 .L0 
     /tmp/ccLVL84K.s:71     .text:0000000000000068 .L0 
     /tmp/ccLVL84K.s:73     .text:000000000000006c .L0 
     /tmp/ccLVL84K.s:75     .text:0000000000000070 .L0 
     /tmp/ccLVL84K.s:84     .text:0000000000000070 .L0 
     /tmp/ccLVL84K.s:28     .text:0000000000000018 .L0 
     /tmp/ccLVL84K.s:55     .text:000000000000003c .L0 
     /tmp/ccLVL84K.s:1211   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccLVL84K.s:2322   .debug_str:0000000000000898 .LASF159
     /tmp/ccLVL84K.s:2120   .debug_str:00000000000002c6 .LASF160
     /tmp/ccLVL84K.s:2330   .debug_str:0000000000000999 .LASF161
     /tmp/ccLVL84K.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccLVL84K.s:78     .text:0000000000000070 .Letext0
     /tmp/ccLVL84K.s:2038   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccLVL84K.s:2142   .debug_str:0000000000000378 .LASF0
     /tmp/ccLVL84K.s:2170   .debug_str:000000000000044a .LASF1
     /tmp/ccLVL84K.s:2262   .debug_str:0000000000000700 .LASF2
     /tmp/ccLVL84K.s:2126   .debug_str:00000000000002fd .LASF3
     /tmp/ccLVL84K.s:2268   .debug_str:0000000000000730 .LASF4
     /tmp/ccLVL84K.s:2152   .debug_str:00000000000003ba .LASF5
     /tmp/ccLVL84K.s:2054   .debug_str:0000000000000070 .LASF6
     /tmp/ccLVL84K.s:2236   .debug_str:0000000000000647 .LASF7
     /tmp/ccLVL84K.s:2162   .debug_str:0000000000000416 .LASF8
     /tmp/ccLVL84K.s:2124   .debug_str:00000000000002ed .LASF9
     /tmp/ccLVL84K.s:2132   .debug_str:000000000000032c .LASF10
     /tmp/ccLVL84K.s:2074   .debug_str:0000000000000118 .LASF11
     /tmp/ccLVL84K.s:2118   .debug_str:00000000000002b7 .LASF12
     /tmp/ccLVL84K.s:2082   .debug_str:0000000000000164 .LASF13
     /tmp/ccLVL84K.s:2072   .debug_str:0000000000000108 .LASF14
     /tmp/ccLVL84K.s:2302   .debug_str:000000000000082c .LASF15
     /tmp/ccLVL84K.s:2108   .debug_str:000000000000023d .LASF16
GAS LISTING /tmp/ccLVL84K.s 			page 7


     /tmp/ccLVL84K.s:2292   .debug_str:00000000000007e6 .LASF17
     /tmp/ccLVL84K.s:2354   .debug_str:0000000000000a5d .LASF71
     /tmp/ccLVL84K.s:2150   .debug_str:00000000000003ac .LASF108
     /tmp/ccLVL84K.s:2286   .debug_str:00000000000007b2 .LASF110
     /tmp/ccLVL84K.s:2278   .debug_str:0000000000000767 .LASF18
     /tmp/ccLVL84K.s:2112   .debug_str:000000000000026f .LASF20
     /tmp/ccLVL84K.s:2144   .debug_str:0000000000000385 .LASF19
     /tmp/ccLVL84K.s:2360   .debug_str:0000000000000a72 .LASF21
     /tmp/ccLVL84K.s:2134   .debug_str:000000000000033a .LASF22
     /tmp/ccLVL84K.s:2140   .debug_str:0000000000000360 .LASF23
     /tmp/ccLVL84K.s:2340   .debug_str:0000000000000a06 .LASF24
     /tmp/ccLVL84K.s:2334   .debug_str:00000000000009cb .LASF26
     /tmp/ccLVL84K.s:2258   .debug_str:00000000000006ec .LASF28
     /tmp/ccLVL84K.s:2218   .debug_str:00000000000005b7 .LASF30
     /tmp/ccLVL84K.s:2244   .debug_str:0000000000000681 .LASF25
     /tmp/ccLVL84K.s:2246   .debug_str:0000000000000688 .LASF27
     /tmp/ccLVL84K.s:2208   .debug_str:0000000000000559 .LASF29
     /tmp/ccLVL84K.s:2164   .debug_str:0000000000000429 .LASF31
     /tmp/ccLVL84K.s:2362   .debug_str:0000000000000a8c .LASF32
     /tmp/ccLVL84K.s:2326   .debug_str:0000000000000969 .LASF33
     /tmp/ccLVL84K.s:2204   .debug_str:000000000000054c .LASF34
     /tmp/ccLVL84K.s:2216   .debug_str:00000000000005a3 .LASF35
     /tmp/ccLVL84K.s:2176   .debug_str:000000000000046a .LASF36
     /tmp/ccLVL84K.s:2248   .debug_str:000000000000069b .LASF37
     /tmp/ccLVL84K.s:2374   .debug_str:0000000000000ad3 .LASF38
     /tmp/ccLVL84K.s:2148   .debug_str:0000000000000398 .LASF39
     /tmp/ccLVL84K.s:2298   .debug_str:0000000000000814 .LASF40
     /tmp/ccLVL84K.s:2272   .debug_str:000000000000073c .LASF41
     /tmp/ccLVL84K.s:2274   .debug_str:000000000000074f .LASF42
     /tmp/ccLVL84K.s:2078   .debug_str:000000000000013e .LASF43
     /tmp/ccLVL84K.s:2102   .debug_str:0000000000000217 .LASF44
     /tmp/ccLVL84K.s:2136   .debug_str:0000000000000345 .LASF45
     /tmp/ccLVL84K.s:2146   .debug_str:0000000000000392 .LASF46
     /tmp/ccLVL84K.s:2096   .debug_str:00000000000001ed .LASF47
     /tmp/ccLVL84K.s:2056   .debug_str:0000000000000077 .LASF48
     /tmp/ccLVL84K.s:2266   .debug_str:0000000000000718 .LASF49
     /tmp/ccLVL84K.s:2260   .debug_str:00000000000006f5 .LASF50
     /tmp/ccLVL84K.s:2370   .debug_str:0000000000000ab5 .LASF51
     /tmp/ccLVL84K.s:2356   .debug_str:0000000000000a63 .LASF52
     /tmp/ccLVL84K.s:2364   .debug_str:0000000000000a94 .LASF53
     /tmp/ccLVL84K.s:2350   .debug_str:0000000000000a35 .LASF54
     /tmp/ccLVL84K.s:2188   .debug_str:00000000000004b8 .LASF55
     /tmp/ccLVL84K.s:2338   .debug_str:00000000000009f7 .LASF56
     /tmp/ccLVL84K.s:2130   .debug_str:0000000000000310 .LASF57
     /tmp/ccLVL84K.s:2276   .debug_str:0000000000000756 .LASF58
     /tmp/ccLVL84K.s:2230   .debug_str:000000000000060d .LASF59
     /tmp/ccLVL84K.s:2358   .debug_str:0000000000000a6d .LASF60
     /tmp/ccLVL84K.s:2228   .debug_str:00000000000005fc .LASF61
     /tmp/ccLVL84K.s:2154   .debug_str:00000000000003cc .LASF62
     /tmp/ccLVL84K.s:2300   .debug_str:000000000000081b .LASF63
     /tmp/ccLVL84K.s:2240   .debug_str:0000000000000664 .LASF64
     /tmp/ccLVL84K.s:2158   .debug_str:00000000000003d7 .LASF66
     /tmp/ccLVL84K.s:2304   .debug_str:0000000000000838 .LASF65
     /tmp/ccLVL84K.s:2210   .debug_str:0000000000000560 .LASF67
     /tmp/ccLVL84K.s:2092   .debug_str:00000000000001cc .LASF68
     /tmp/ccLVL84K.s:2196   .debug_str:0000000000000504 .LASF69
     /tmp/ccLVL84K.s:2348   .debug_str:0000000000000a2c .LASF70
GAS LISTING /tmp/ccLVL84K.s 			page 8


     /tmp/ccLVL84K.s:2306   .debug_str:000000000000084d .LASF112
     /tmp/ccLVL84K.s:2308   .debug_str:0000000000000855 .LASF72
     /tmp/ccLVL84K.s:2202   .debug_str:0000000000000535 .LASF74
     /tmp/ccLVL84K.s:2064   .debug_str:00000000000000ad .LASF76
     /tmp/ccLVL84K.s:2336   .debug_str:00000000000009e0 .LASF78
     /tmp/ccLVL84K.s:2264   .debug_str:000000000000070e .LASF73
     /tmp/ccLVL84K.s:2070   .debug_str:00000000000000f3 .LASF75
     /tmp/ccLVL84K.s:2310   .debug_str:0000000000000860 .LASF77
     /tmp/ccLVL84K.s:2114   .debug_str:000000000000028a .LASF79
     /tmp/ccLVL84K.s:2172   .debug_str:000000000000045d .LASF80
     /tmp/ccLVL84K.s:2256   .debug_str:00000000000006dc .LASF81
     /tmp/ccLVL84K.s:2098   .debug_str:00000000000001ff .LASF82
     /tmp/ccLVL84K.s:2080   .debug_str:0000000000000151 .LASF83
     /tmp/ccLVL84K.s:2320   .debug_str:0000000000000890 .LASF84
     /tmp/ccLVL84K.s:2324   .debug_str:000000000000095c .LASF85
     /tmp/ccLVL84K.s:2186   .debug_str:0000000000000491 .LASF86
     /tmp/ccLVL84K.s:2226   .debug_str:00000000000005f7 .LASF162
     /tmp/ccLVL84K.s:2184   .debug_str:0000000000000485 .LASF87
     /tmp/ccLVL84K.s:2116   .debug_str:00000000000002a0 .LASF88
     /tmp/ccLVL84K.s:2318   .debug_str:000000000000088b .LASF89
     /tmp/ccLVL84K.s:2042   .debug_str:0000000000000008 .LASF90
     /tmp/ccLVL84K.s:2190   .debug_str:00000000000004ce .LASF91
     /tmp/ccLVL84K.s:2316   .debug_str:0000000000000875 .LASF92
     /tmp/ccLVL84K.s:2076   .debug_str:0000000000000127 .LASF163
     /tmp/ccLVL84K.s:2270   .debug_str:0000000000000737 .LASF93
     /tmp/ccLVL84K.s:2052   .debug_str:0000000000000064 .LASF94
     /tmp/ccLVL84K.s:2254   .debug_str:00000000000006cf .LASF95
     /tmp/ccLVL84K.s:2284   .debug_str:000000000000079a .LASF96
     /tmp/ccLVL84K.s:2044   .debug_str:0000000000000017 .LASF97
     /tmp/ccLVL84K.s:2368   .debug_str:0000000000000aaf .LASF98
     /tmp/ccLVL84K.s:2332   .debug_str:00000000000009c3 .LASF99
     /tmp/ccLVL84K.s:2290   .debug_str:00000000000007dd .LASF100
     /tmp/ccLVL84K.s:2242   .debug_str:0000000000000679 .LASF101
     /tmp/ccLVL84K.s:2174   .debug_str:0000000000000463 .LASF102
     /tmp/ccLVL84K.s:2100   .debug_str:0000000000000208 .LASF103
     /tmp/ccLVL84K.s:2122   .debug_str:00000000000002d3 .LASF104
     /tmp/ccLVL84K.s:2086   .debug_str:000000000000018f .LASF105
     /tmp/ccLVL84K.s:2288   .debug_str:00000000000007d1 .LASF106
     /tmp/ccLVL84K.s:2040   .debug_str:0000000000000000 .LASF107
     /tmp/ccLVL84K.s:2090   .debug_str:00000000000001be .LASF109
     /tmp/ccLVL84K.s:2050   .debug_str:000000000000003c .LASF111
     /tmp/ccLVL84K.s:2312   .debug_str:000000000000086b .LASF164
     /tmp/ccLVL84K.s:2156   .debug_str:00000000000003d1 .LASF113
     /tmp/ccLVL84K.s:2366   .debug_str:0000000000000aaa .LASF114
     /tmp/ccLVL84K.s:2060   .debug_str:00000000000000a3 .LASF115
     /tmp/ccLVL84K.s:2168   .debug_str:0000000000000445 .LASF116
     /tmp/ccLVL84K.s:2222   .debug_str:00000000000005d1 .LASF117
     /tmp/ccLVL84K.s:2182   .debug_str:0000000000000480 .LASF118
     /tmp/ccLVL84K.s:2232   .debug_str:000000000000062b .LASF119
     /tmp/ccLVL84K.s:2296   .debug_str:000000000000080f .LASF120
     /tmp/ccLVL84K.s:2062   .debug_str:00000000000000a8 .LASF121
     /tmp/ccLVL84K.s:2328   .debug_str:000000000000097d .LASF122
     /tmp/ccLVL84K.s:2192   .debug_str:00000000000004d9 .LASF123
     /tmp/ccLVL84K.s:2058   .debug_str:0000000000000082 .LASF124
     /tmp/ccLVL84K.s:2138   .debug_str:0000000000000357 .LASF125
     /tmp/ccLVL84K.s:2194   .debug_str:00000000000004e3 .LASF126
     /tmp/ccLVL84K.s:2372   .debug_str:0000000000000acd .LASF127
GAS LISTING /tmp/ccLVL84K.s 			page 9


     /tmp/ccLVL84K.s:2088   .debug_str:0000000000000198 .LASF128
     /tmp/ccLVL84K.s:2046   .debug_str:000000000000001c .LASF129
     /tmp/ccLVL84K.s:2066   .debug_str:00000000000000b9 .LASF130
     /tmp/ccLVL84K.s:2238   .debug_str:000000000000065a .LASF131
     /tmp/ccLVL84K.s:2342   .debug_str:0000000000000a0f .LASF165
     /tmp/ccLVL84K.s:2206   .debug_str:0000000000000554 .LASF132
     /tmp/ccLVL84K.s:2198   .debug_str:0000000000000528 .LASF133
     /tmp/ccLVL84K.s:2294   .debug_str:00000000000007fc .LASF134
     /tmp/ccLVL84K.s:2106   .debug_str:0000000000000226 .LASF135
     /tmp/ccLVL84K.s:2094   .debug_str:00000000000001e3 .LASF166
     /tmp/ccLVL84K.s:2252   .debug_str:00000000000006b8 .LASF167
     /tmp/ccLVL84K.s:2166   .debug_str:000000000000043c .LASF136
     /tmp/ccLVL84K.s:2068   .debug_str:00000000000000d6 .LASF137
     /tmp/ccLVL84K.s:2180   .debug_str:0000000000000478 .LASF138
     /tmp/ccLVL84K.s:2110   .debug_str:0000000000000253 .LASF139
     /tmp/ccLVL84K.s:2234   .debug_str:000000000000063b .LASF140
     /tmp/ccLVL84K.s:2352   .debug_str:0000000000000a3f .LASF141
     /tmp/ccLVL84K.s:2376   .debug_str:0000000000000adb .LASF142
     /tmp/ccLVL84K.s:2084   .debug_str:0000000000000174 .LASF143
     /tmp/ccLVL84K.s:2282   .debug_str:000000000000078f .LASF144
     /tmp/ccLVL84K.s:2160   .debug_str:00000000000003f9 .LASF145
     /tmp/ccLVL84K.s:2250   .debug_str:00000000000006af .LASF146
     /tmp/ccLVL84K.s:2048   .debug_str:0000000000000022 .LASF147
     /tmp/ccLVL84K.s:2200   .debug_str:000000000000052d .LASF148
     /tmp/ccLVL84K.s:2280   .debug_str:0000000000000775 .LASF149
     /tmp/ccLVL84K.s:2104   .debug_str:000000000000021d .LASF150
     /tmp/ccLVL84K.s:2314   .debug_str:0000000000000870 .LASF151
     /tmp/ccLVL84K.s:2220   .debug_str:00000000000005cc .LASF152
     /tmp/ccLVL84K.s:10     .text:0000000000000000 .LFB39
     /tmp/ccLVL84K.s:76     .text:0000000000000070 .LFE39
     /tmp/ccLVL84K.s:2128   .debug_str:0000000000000304 .LASF153
     /tmp/ccLVL84K.s:2346   .debug_str:0000000000000a22 .LASF154
     /tmp/ccLVL84K.s:30     .text:0000000000000020 .LBB4
     /tmp/ccLVL84K.s:42     .text:0000000000000024 .LBE4
     /tmp/ccLVL84K.s:25     .text:0000000000000018 .LVL0
     /tmp/ccLVL84K.s:50     .text:0000000000000038 .LVL3
     /tmp/ccLVL84K.s:58     .text:0000000000000050 .LVL4
     /tmp/ccLVL84K.s:63     .text:000000000000005c .LVL5
     /tmp/ccLVL84K.s:2178   .debug_str:0000000000000472 .LASF168
     /tmp/ccLVL84K.s:2224   .debug_str:00000000000005d6 .LASF155
     /tmp/ccLVL84K.s:2344   .debug_str:0000000000000a14 .LASF157
     /tmp/ccLVL84K.s:2214   .debug_str:000000000000058e .LASF156
     /tmp/ccLVL84K.s:2212   .debug_str:0000000000000582 .LASF158
     /tmp/ccLVL84K.s:85     .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator4initEv
rutina
_Z13thread_createPP3TCBPFvPvES2_
_Z8userMainv
_Z11thread_joinP3TCB
