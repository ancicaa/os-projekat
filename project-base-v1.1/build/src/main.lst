GAS LISTING /tmp/ccab5lx7.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB18:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/riscv.hpp"
   2:src/main.cpp  **** #include "../h/syscall_c.hpp"
   3:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   4:src/main.cpp  **** #include "../lib/console.h"
   5:src/main.cpp  **** #include "../lib/hw.h"
   6:src/main.cpp  **** extern "C" void rutina();
   7:src/main.cpp  **** 
   8:src/main.cpp  **** int main() {
  12              		.loc 1 8 12
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18 000c 23349100 		sd	s1,8(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21              		.cfi_offset 9, -24
  22 0010 13040102 		addi	s0,sp,32
  23              		.cfi_def_cfa 8, 0
   9:src/main.cpp  ****     MemoryAllocator::init();
  24              		.loc 1 9 5
  25              		.loc 1 9 26 is_stmt 0
  26 0014 97000000 		call	_ZN15MemoryAllocator4initEv@plt
  26      E7800000 
  27              	.LVL0:
  10:src/main.cpp  ****     Riscv::w_stvec((uint64)rutina);// upis adrese prekidne rutine
  28              		.loc 1 10 5 is_stmt 1
  29              		.loc 1 10 19 is_stmt 0
  30 001c 97070000 		la	a5,rutina
  30      83B70700 
  31              	.LVL1:
  32              	.LBB4:
  33              	.LBB5:
  34              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv{
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp ****     static void obradaprekida(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4);
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  12:src/../h/riscv.hpp ****     static void popSppSpie();
GAS LISTING /tmp/ccab5lx7.s 			page 2


  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read register sepc
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip
  39:src/../h/riscv.hpp ****     {
  40:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // mask set register sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask clear register sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  60:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  61:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sstatus
  65:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask clear register sstatus
  68:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccab5lx7.s 			page 3


  70:src/../h/riscv.hpp ****     // read register sstatus
  71:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sstatus
  74:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // supervisor trap
  77:src/../h/riscv.hpp ****     static void supervisorTrap();
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     //stvec Vector "table"
  80:src/../h/riscv.hpp ****     static void stvecVectorTable();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //read a0 register
  83:src/../h/riscv.hpp ****     static uint64 r_a0();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //write to a0 register
  86:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** private:
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     // supervisor trap handler
  92:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
  97:src/../h/riscv.hpp **** };
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 101:src/../h/riscv.hpp **** {
 102:src/../h/riscv.hpp ****     uint64 volatile scause;
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 104:src/../h/riscv.hpp ****     return scause;
 105:src/../h/riscv.hpp **** }
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 108:src/../h/riscv.hpp **** {
 109:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 113:src/../h/riscv.hpp **** {
 114:src/../h/riscv.hpp ****     uint64 volatile sepc;
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 116:src/../h/riscv.hpp ****     return sepc;
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 120:src/../h/riscv.hpp **** {
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     uint64 volatile stvec;
GAS LISTING /tmp/ccab5lx7.s 			page 4


 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 128:src/../h/riscv.hpp ****     return stvec;
 129:src/../h/riscv.hpp **** }
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  35              		.loc 2 133 5 is_stmt 1
  36              		.loc 2 133 69 is_stmt 0
  37              	#APP
  38              	# 133 "src/../h/riscv.hpp" 1
 134              	}
  39              		csrw stvec, a5
  40              	# 0 "" 2
  41              	.LVL2:
  42              	#NO_APP
  43              	.LBE5:
  44              	.LBE4:
  11:src/main.cpp  **** 
  12:src/main.cpp  ****     char* a = (char*)MemoryAllocator::mem_alloc(2);
  45              		.loc 1 12 5 is_stmt 1
  46              		.loc 1 12 48 is_stmt 0
  47 0028 13052000 		li	a0,2
  48 002c 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
  48      E7800000 
  49              	.LVL3:
  50 0034 93040500 		mv	s1,a0
  51              	.LVL4:
  13:src/main.cpp  ****     *a='a';
  52              		.loc 1 13 5 is_stmt 1
  53              		.loc 1 13 7 is_stmt 0
  54 0038 93071006 		li	a5,97
  55 003c 2300F500 		sb	a5,0(a0)
  14:src/main.cpp  ****     *(a+1)='b';
  56              		.loc 1 14 5 is_stmt 1
  57              		.loc 1 14 11 is_stmt 0
  58 0040 93072006 		li	a5,98
  59 0044 A300F500 		sb	a5,1(a0)
  15:src/main.cpp  ****     *(a+2)='c';
  60              		.loc 1 15 5 is_stmt 1
  61              		.loc 1 15 11 is_stmt 0
  62 0048 93073006 		li	a5,99
  63 004c 2301F500 		sb	a5,2(a0)
  16:src/main.cpp  ****     *(a+3)='d';
  64              		.loc 1 16 5 is_stmt 1
  65              		.loc 1 16 11 is_stmt 0
  66 0050 93074006 		li	a5,100
  67 0054 A301F500 		sb	a5,3(a0)
  17:src/main.cpp  ****     *(a+4)='e';
  68              		.loc 1 17 5 is_stmt 1
  69              		.loc 1 17 11 is_stmt 0
  70 0058 93075006 		li	a5,101
  71 005c 2302F500 		sb	a5,4(a0)
  18:src/main.cpp  **** 
  19:src/main.cpp  ****    __putc(*a);
  72              		.loc 1 19 4 is_stmt 1
  73              		.loc 1 19 10 is_stmt 0
GAS LISTING /tmp/ccab5lx7.s 			page 5


  74 0060 13051006 		li	a0,97
  75 0064 97000000 		call	__putc@plt
  75      E7800000 
  76              	.LVL5:
  20:src/main.cpp  ****     __putc(*(a+1));
  77              		.loc 1 20 5 is_stmt 1
  78              		.loc 1 20 11 is_stmt 0
  79 006c 03C51400 		lbu	a0,1(s1)
  80 0070 97000000 		call	__putc@plt
  80      E7800000 
  81              	.LVL6:
  21:src/main.cpp  ****     __putc(*(a+2));
  82              		.loc 1 21 5 is_stmt 1
  83              		.loc 1 21 11 is_stmt 0
  84 0078 03C52400 		lbu	a0,2(s1)
  85 007c 97000000 		call	__putc@plt
  85      E7800000 
  86              	.LVL7:
  22:src/main.cpp  ****     __putc(*(a+3));
  87              		.loc 1 22 5 is_stmt 1
  88              		.loc 1 22 11 is_stmt 0
  89 0084 03C53400 		lbu	a0,3(s1)
  90 0088 97000000 		call	__putc@plt
  90      E7800000 
  91              	.LVL8:
  23:src/main.cpp  ****     __putc(*(a+4));
  92              		.loc 1 23 5 is_stmt 1
  93              		.loc 1 23 11 is_stmt 0
  94 0090 03C54400 		lbu	a0,4(s1)
  95 0094 97000000 		call	__putc@plt
  95      E7800000 
  96              	.LVL9:
  24:src/main.cpp  **** 
  25:src/main.cpp  **** 
  26:src/main.cpp  **** 
  27:src/main.cpp  ****     return 0;
  97              		.loc 1 27 5 is_stmt 1
  28:src/main.cpp  **** }
  98              		.loc 1 28 1 is_stmt 0
  99 009c 13050000 		li	a0,0
 100 00a0 83308101 		ld	ra,24(sp)
 101              		.cfi_restore 1
 102 00a4 03340101 		ld	s0,16(sp)
 103              		.cfi_restore 8
 104              		.cfi_def_cfa 2, 32
 105 00a8 83348100 		ld	s1,8(sp)
 106              		.cfi_restore 9
 107              	.LVL10:
 108 00ac 13010102 		addi	sp,sp,32
 109              		.cfi_def_cfa_offset 0
 110 00b0 67800000 		jr	ra
 111              		.cfi_endproc
 112              	.LFE18:
 114              	.Letext0:
 115              		.file 3 "src/../h/../lib/hw.h"
 116              		.file 4 "src/../h/MemoryAllocator.hpp"
 117              		.file 5 "src/../lib/console.h"
GAS LISTING /tmp/ccab5lx7.s 			page 6


GAS LISTING /tmp/ccab5lx7.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccab5lx7.s:9      .text:0000000000000000 main
     /tmp/ccab5lx7.s:13     .text:0000000000000000 .L0 
     /tmp/ccab5lx7.s:14     .text:0000000000000000 .L0 
     /tmp/ccab5lx7.s:15     .text:0000000000000004 .L0 
     /tmp/ccab5lx7.s:19     .text:0000000000000010 .L0 
     /tmp/ccab5lx7.s:20     .text:0000000000000010 .L0 
     /tmp/ccab5lx7.s:21     .text:0000000000000010 .L0 
     /tmp/ccab5lx7.s:23     .text:0000000000000014 .L0 
     /tmp/ccab5lx7.s:25     .text:0000000000000014 .L0 
     /tmp/ccab5lx7.s:26     .text:0000000000000014 .L0 
     /tmp/ccab5lx7.s:29     .text:000000000000001c .L0 
     /tmp/ccab5lx7.s:30     .text:000000000000001c .L0 
     /tmp/ccab5lx7.s:36     .text:0000000000000024 .L0 
  src/../h/riscv.hpp:133    .text:0000000000000024 .L0 
     /tmp/ccab5lx7.s:46     .text:0000000000000028 .L0 
     /tmp/ccab5lx7.s:47     .text:0000000000000028 .L0 
     /tmp/ccab5lx7.s:53     .text:0000000000000038 .L0 
     /tmp/ccab5lx7.s:54     .text:0000000000000038 .L0 
     /tmp/ccab5lx7.s:57     .text:0000000000000040 .L0 
     /tmp/ccab5lx7.s:58     .text:0000000000000040 .L0 
     /tmp/ccab5lx7.s:61     .text:0000000000000048 .L0 
     /tmp/ccab5lx7.s:62     .text:0000000000000048 .L0 
     /tmp/ccab5lx7.s:65     .text:0000000000000050 .L0 
     /tmp/ccab5lx7.s:66     .text:0000000000000050 .L0 
     /tmp/ccab5lx7.s:69     .text:0000000000000058 .L0 
     /tmp/ccab5lx7.s:70     .text:0000000000000058 .L0 
     /tmp/ccab5lx7.s:73     .text:0000000000000060 .L0 
     /tmp/ccab5lx7.s:74     .text:0000000000000060 .L0 
     /tmp/ccab5lx7.s:78     .text:000000000000006c .L0 
     /tmp/ccab5lx7.s:79     .text:000000000000006c .L0 
     /tmp/ccab5lx7.s:83     .text:0000000000000078 .L0 
     /tmp/ccab5lx7.s:84     .text:0000000000000078 .L0 
     /tmp/ccab5lx7.s:88     .text:0000000000000084 .L0 
     /tmp/ccab5lx7.s:89     .text:0000000000000084 .L0 
     /tmp/ccab5lx7.s:93     .text:0000000000000090 .L0 
     /tmp/ccab5lx7.s:94     .text:0000000000000090 .L0 
     /tmp/ccab5lx7.s:98     .text:000000000000009c .L0 
     /tmp/ccab5lx7.s:99     .text:000000000000009c .L0 
     /tmp/ccab5lx7.s:101    .text:00000000000000a4 .L0 
     /tmp/ccab5lx7.s:103    .text:00000000000000a8 .L0 
     /tmp/ccab5lx7.s:104    .text:00000000000000a8 .L0 
     /tmp/ccab5lx7.s:106    .text:00000000000000ac .L0 
     /tmp/ccab5lx7.s:109    .text:00000000000000b0 .L0 
     /tmp/ccab5lx7.s:111    .text:00000000000000b4 .L0 
     /tmp/ccab5lx7.s:118    .text:00000000000000b4 .L0 
     /tmp/ccab5lx7.s:30     .text:000000000000001c .L0 
     /tmp/ccab5lx7.s:688    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccab5lx7.s:1385   .debug_str:00000000000004a8 .LASF84
     /tmp/ccab5lx7.s:1305   .debug_str:0000000000000249 .LASF85
     /tmp/ccab5lx7.s:1297   .debug_str:00000000000001ee .LASF86
     /tmp/ccab5lx7.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccab5lx7.s:114    .text:00000000000000b4 .Letext0
     /tmp/ccab5lx7.s:1227   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccab5lx7.s:1325   .debug_str:00000000000002e8 .LASF0
     /tmp/ccab5lx7.s:1331   .debug_str:0000000000000302 .LASF1
GAS LISTING /tmp/ccab5lx7.s 			page 8


     /tmp/ccab5lx7.s:1311   .debug_str:0000000000000285 .LASF2
     /tmp/ccab5lx7.s:1361   .debug_str:00000000000003ec .LASF3
     /tmp/ccab5lx7.s:1299   .debug_str:0000000000000215 .LASF4
     /tmp/ccab5lx7.s:1365   .debug_str:000000000000040b .LASF5
     /tmp/ccab5lx7.s:1243   .debug_str:0000000000000060 .LASF6
     /tmp/ccab5lx7.s:1335   .debug_str:000000000000032a .LASF7
     /tmp/ccab5lx7.s:1323   .debug_str:00000000000002d5 .LASF8
     /tmp/ccab5lx7.s:1391   .debug_str:0000000000000599 .LASF9
     /tmp/ccab5lx7.s:1289   .debug_str:00000000000001a0 .LASF10
     /tmp/ccab5lx7.s:1345   .debug_str:000000000000036e .LASF11
     /tmp/ccab5lx7.s:1387   .debug_str:000000000000056c .LASF12
     /tmp/ccab5lx7.s:1247   .debug_str:000000000000006c .LASF13
     /tmp/ccab5lx7.s:1231   .debug_str:0000000000000008 .LASF14
     /tmp/ccab5lx7.s:1257   .debug_str:00000000000000bc .LASF15
     /tmp/ccab5lx7.s:1359   .debug_str:00000000000003d6 .LASF16
     /tmp/ccab5lx7.s:1261   .debug_str:00000000000000ce .LASF17
     /tmp/ccab5lx7.s:1329   .debug_str:00000000000002fc .LASF71
     /tmp/ccab5lx7.s:1235   .debug_str:0000000000000021 .LASF79
     /tmp/ccab5lx7.s:1307   .debug_str:0000000000000256 .LASF81
     /tmp/ccab5lx7.s:1355   .debug_str:00000000000003c4 .LASF50
     /tmp/ccab5lx7.s:1405   .debug_str:0000000000000606 .LASF52
     /tmp/ccab5lx7.s:1233   .debug_str:0000000000000018 .LASF18
     /tmp/ccab5lx7.s:1373   .debug_str:000000000000044a .LASF20
     /tmp/ccab5lx7.s:1271   .debug_str:0000000000000123 .LASF22
     /tmp/ccab5lx7.s:1269   .debug_str:000000000000010e .LASF24
     /tmp/ccab5lx7.s:1367   .debug_str:000000000000041d .LASF19
     /tmp/ccab5lx7.s:1349   .debug_str:0000000000000386 .LASF21
     /tmp/ccab5lx7.s:1383   .debug_str:00000000000004a1 .LASF23
     /tmp/ccab5lx7.s:1377   .debug_str:0000000000000477 .LASF25
     /tmp/ccab5lx7.s:1283   .debug_str:0000000000000171 .LASF26
     /tmp/ccab5lx7.s:1263   .debug_str:00000000000000e4 .LASF27
     /tmp/ccab5lx7.s:1229   .debug_str:0000000000000000 .LASF28
     /tmp/ccab5lx7.s:1293   .debug_str:00000000000001c4 .LASF29
     /tmp/ccab5lx7.s:1275   .debug_str:000000000000013d .LASF30
     /tmp/ccab5lx7.s:1249   .debug_str:000000000000007c .LASF31
     /tmp/ccab5lx7.s:1409   .debug_str:0000000000000629 .LASF32
     /tmp/ccab5lx7.s:1277   .debug_str:0000000000000145 .LASF33
     /tmp/ccab5lx7.s:1327   .debug_str:00000000000002f5 .LASF34
     /tmp/ccab5lx7.s:1401   .debug_str:00000000000005ee .LASF35
     /tmp/ccab5lx7.s:1241   .debug_str:0000000000000059 .LASF36
     /tmp/ccab5lx7.s:1281   .debug_str:000000000000015e .LASF37
     /tmp/ccab5lx7.s:1285   .debug_str:0000000000000179 .LASF38
     /tmp/ccab5lx7.s:1381   .debug_str:000000000000048f .LASF39
     /tmp/ccab5lx7.s:1239   .debug_str:0000000000000053 .LASF40
     /tmp/ccab5lx7.s:1411   .debug_str:0000000000000631 .LASF41
     /tmp/ccab5lx7.s:1407   .debug_str:000000000000061e .LASF42
     /tmp/ccab5lx7.s:1363   .debug_str:00000000000003f3 .LASF43
     /tmp/ccab5lx7.s:1301   .debug_str:000000000000021c .LASF44
     /tmp/ccab5lx7.s:1375   .debug_str:000000000000045f .LASF45
     /tmp/ccab5lx7.s:1255   .debug_str:00000000000000b2 .LASF46
     /tmp/ccab5lx7.s:1295   .debug_str:00000000000001d8 .LASF47
     /tmp/ccab5lx7.s:1313   .debug_str:0000000000000293 .LASF48
     /tmp/ccab5lx7.s:1291   .debug_str:00000000000001ae .LASF49
     /tmp/ccab5lx7.s:1369   .debug_str:0000000000000424 .LASF51
     /tmp/ccab5lx7.s:1251   .debug_str:0000000000000090 .LASF53
     /tmp/ccab5lx7.s:1267   .debug_str:00000000000000fd .LASF54
     /tmp/ccab5lx7.s:1389   .debug_str:000000000000057b .LASF55
GAS LISTING /tmp/ccab5lx7.s 			page 9


     /tmp/ccab5lx7.s:1379   .debug_str:000000000000048a .LASF56
     /tmp/ccab5lx7.s:1273   .debug_str:000000000000012c .LASF57
     /tmp/ccab5lx7.s:1245   .debug_str:0000000000000067 .LASF58
     /tmp/ccab5lx7.s:1315   .debug_str:000000000000029d .LASF59
     /tmp/ccab5lx7.s:1395   .debug_str:00000000000005b3 .LASF60
     /tmp/ccab5lx7.s:1303   .debug_str:0000000000000227 .LASF62
     /tmp/ccab5lx7.s:1333   .debug_str:0000000000000315 .LASF61
     /tmp/ccab5lx7.s:1341   .debug_str:0000000000000347 .LASF63
     /tmp/ccab5lx7.s:1371   .debug_str:0000000000000433 .LASF64
     /tmp/ccab5lx7.s:1237   .debug_str:000000000000002f .LASF65
     /tmp/ccab5lx7.s:1259   .debug_str:00000000000000c8 .LASF87
     /tmp/ccab5lx7.s:1317   .debug_str:00000000000002ae .LASF66
     /tmp/ccab5lx7.s:1399   .debug_str:00000000000005e9 .LASF67
     /tmp/ccab5lx7.s:1353   .debug_str:00000000000003bf .LASF68
     /tmp/ccab5lx7.s:1403   .debug_str:0000000000000601 .LASF69
     /tmp/ccab5lx7.s:1279   .debug_str:0000000000000159 .LASF70
     /tmp/ccab5lx7.s:1309   .debug_str:0000000000000275 .LASF72
     /tmp/ccab5lx7.s:1265   .debug_str:00000000000000f8 .LASF88
     /tmp/ccab5lx7.s:1339   .debug_str:0000000000000342 .LASF73
     /tmp/ccab5lx7.s:1319   .debug_str:00000000000002b3 .LASF74
     /tmp/ccab5lx7.s:1393   .debug_str:00000000000005a9 .LASF75
     /tmp/ccab5lx7.s:1397   .debug_str:00000000000005c8 .LASF77
     /tmp/ccab5lx7.s:1347   .debug_str:000000000000037d .LASF76
     /tmp/ccab5lx7.s:1287   .debug_str:000000000000017f .LASF78
     /tmp/ccab5lx7.s:1253   .debug_str:00000000000000ac .LASF80
     /tmp/ccab5lx7.s:1351   .debug_str:0000000000000399 .LASF82
     /tmp/ccab5lx7.s:1343   .debug_str:0000000000000369 .LASF89
     /tmp/ccab5lx7.s:10     .text:0000000000000000 .LFB18
     /tmp/ccab5lx7.s:112    .text:00000000000000b4 .LFE18
     /tmp/ccab5lx7.s:1207   .debug_loc:0000000000000000 .LLST0
     /tmp/ccab5lx7.s:32     .text:0000000000000024 .LBB4
     /tmp/ccab5lx7.s:44     .text:0000000000000028 .LBE4
     /tmp/ccab5lx7.s:27     .text:000000000000001c .LVL0
     /tmp/ccab5lx7.s:49     .text:0000000000000034 .LVL3
     /tmp/ccab5lx7.s:76     .text:000000000000006c .LVL5
     /tmp/ccab5lx7.s:81     .text:0000000000000078 .LVL6
     /tmp/ccab5lx7.s:86     .text:0000000000000084 .LVL7
     /tmp/ccab5lx7.s:91     .text:0000000000000090 .LVL8
     /tmp/ccab5lx7.s:96     .text:000000000000009c .LVL9
     /tmp/ccab5lx7.s:1337   .debug_str:000000000000033d .LASF83
     /tmp/ccab5lx7.s:1321   .debug_str:00000000000002cf .LASF90
     /tmp/ccab5lx7.s:1357   .debug_str:00000000000003cf .LASF91
     /tmp/ccab5lx7.s:51     .text:0000000000000038 .LVL4
     /tmp/ccab5lx7.s:107    .text:00000000000000ac .LVL10
     /tmp/ccab5lx7.s:119    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_ZN15MemoryAllocator4initEv
rutina
_ZN15MemoryAllocator9mem_allocEm
__putc
