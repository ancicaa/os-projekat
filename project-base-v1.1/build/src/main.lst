GAS LISTING /tmp/ccQ600KR.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	main
   9              	main:
  10              	.LFB35:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/riscv.hpp"
   2:src/main.cpp  **** #include "../h/syscall_c.hpp"
   3:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   4:src/main.cpp  **** #include "../lib/console.h"
   5:src/main.cpp  **** #include "../lib/hw.h"
   6:src/main.cpp  **** #include "../h/printing.hpp"
   7:src/main.cpp  **** #include "../h/TCB.hpp"
   8:src/main.cpp  **** #include "../h/syscall_cpp.hpp"
   9:src/main.cpp  **** 
  10:src/main.cpp  **** extern "C" void rutina();
  11:src/main.cpp  **** 
  12:src/main.cpp  **** extern void userMain();
  13:src/main.cpp  **** 
  14:src/main.cpp  **** int main() {
  12              		.loc 1 14 12
  13              		.cfi_startproc
  14 0000 130101FE 		addi	sp,sp,-32
  15              		.cfi_def_cfa_offset 32
  16 0004 233C1100 		sd	ra,24(sp)
  17 0008 23388100 		sd	s0,16(sp)
  18              		.cfi_offset 1, -8
  19              		.cfi_offset 8, -16
  20 000c 13040102 		addi	s0,sp,32
  21              		.cfi_def_cfa 8, 0
  15:src/main.cpp  ****     MemoryAllocator::init();
  22              		.loc 1 15 5
  23              		.loc 1 15 26 is_stmt 0
  24 0010 97000000 		call	_ZN15MemoryAllocator4initEv@plt
  24      E7800000 
  25              	.LVL0:
  16:src/main.cpp  ****     Riscv::w_stvec((uint64) rutina);// upis adrese prekidne rutinina
  26              		.loc 1 16 5 is_stmt 1
  27              		.loc 1 16 19 is_stmt 0
  28 0018 97070000 		la	a5,rutina
  28      83B70700 
  29              	.LVL1:
  30              	.LBB4:
  31              	.LBB5:
  32              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv{
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp ****     static void obradaprekida(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4);
GAS LISTING /tmp/ccQ600KR.s 			page 2


   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****   static void pushRegisters();
  12:src/../h/riscv.hpp ****   static void popRegisters();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
GAS LISTING /tmp/ccQ600KR.s 			page 3


  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //stvec Vector "table"
  83:src/../h/riscv.hpp ****     static void stvecVectorTable();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a0 register
  86:src/../h/riscv.hpp ****     static uint64 r_a0();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write to a0 register
  89:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** private:
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     // supervisor trap handler
  95:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 100:src/../h/riscv.hpp **** };
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 104:src/../h/riscv.hpp **** {
 105:src/../h/riscv.hpp ****     uint64 volatile scause;
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 107:src/../h/riscv.hpp ****     return scause;
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 116:src/../h/riscv.hpp **** {
 117:src/../h/riscv.hpp ****     uint64 volatile sepc;
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 119:src/../h/riscv.hpp ****     return sepc;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
GAS LISTING /tmp/ccQ600KR.s 			page 4


 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 128:src/../h/riscv.hpp **** {
 129:src/../h/riscv.hpp ****     uint64 volatile stvec;
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 131:src/../h/riscv.hpp ****     return stvec;
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  33              		.loc 2 136 5 is_stmt 1
  34              		.loc 2 136 69 is_stmt 0
  35              	#APP
  36              	# 136 "src/../h/riscv.hpp" 1
 137              	}
  37              		csrw stvec, a5
  38              	# 0 "" 2
  39              	.LVL2:
  40              	#NO_APP
  41              	.LBE5:
  42              	.LBE4:
  17:src/main.cpp  **** 
  18:src/main.cpp  ****     setMaxThreads(10);
  43              		.loc 1 18 5 is_stmt 1
  44              		.loc 1 18 18 is_stmt 0
  45 0024 1305A000 		li	a0,10
  46 0028 97000000 		call	_Z13setMaxThreadsi@plt
  46      E7800000 
  47              	.LVL3:
  19:src/main.cpp  ****     thread_t main_handle;
  48              		.loc 1 19 5 is_stmt 1
  20:src/main.cpp  ****     thread_create(&main_handle, nullptr, nullptr);
  49              		.loc 1 20 5
  50              		.loc 1 20 18 is_stmt 0
  51 0030 13060000 		li	a2,0
  52 0034 93050000 		li	a1,0
  53 0038 130584FE 		addi	a0,s0,-24
  54 003c 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  54      E7800000 
  55              	.LVL4:
  21:src/main.cpp  **** 
  22:src/main.cpp  ****     thread_t um_handle;
  56              		.loc 1 22 5 is_stmt 1
  23:src/main.cpp  ****     thread_create(&um_handle, reinterpret_cast<void (*)(void *)>(userMain), nullptr);
  57              		.loc 1 23 5
  58              		.loc 1 23 18 is_stmt 0
  59 0044 13060000 		li	a2,0
  60 0048 97050000 		la	a1,_Z8userMainv
  60      83B50500 
  61 0050 130504FE 		addi	a0,s0,-32
  62 0054 97000000 		call	_Z13thread_createPP3TCBPFvPvES2_@plt
  62      E7800000 
  63              	.LVL5:
GAS LISTING /tmp/ccQ600KR.s 			page 5


  24:src/main.cpp  ****     thread_join(um_handle);
  64              		.loc 1 24 5 is_stmt 1
  65              		.loc 1 24 16 is_stmt 0
  66 005c 033504FE 		ld	a0,-32(s0)
  67 0060 97000000 		call	_Z11thread_joinP3TCB@plt
  67      E7800000 
  68              	.LVL6:
  25:src/main.cpp  ****     return 0;
  69              		.loc 1 25 5 is_stmt 1
  26:src/main.cpp  **** }...
  70              		.loc 1 26 1 is_stmt 0
  71 0068 13050000 		li	a0,0
  72 006c 83308101 		ld	ra,24(sp)
  73              		.cfi_restore 1
  74 0070 03340101 		ld	s0,16(sp)
  75              		.cfi_restore 8
  76              		.cfi_def_cfa 2, 32
  77 0074 13010102 		addi	sp,sp,32
  78              		.cfi_def_cfa_offset 0
  79 0078 67800000 		jr	ra
  80              		.cfi_endproc
  81              	.LFE35:
  83              	.Letext0:
  84              		.file 3 "src/../h/../lib/hw.h"
  85              		.file 4 "src/../h/syscall_c.hpp"
  86              		.file 5 "src/../h/TCB.hpp"
  87              		.file 6 "src/../h/MemoryAllocator.hpp"
  88              		.file 7 "src/../h/list.hpp"
GAS LISTING /tmp/ccQ600KR.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccQ600KR.s:9      .text:0000000000000000 main
     /tmp/ccQ600KR.s:13     .text:0000000000000000 .L0 
     /tmp/ccQ600KR.s:14     .text:0000000000000000 .L0 
     /tmp/ccQ600KR.s:15     .text:0000000000000004 .L0 
     /tmp/ccQ600KR.s:18     .text:000000000000000c .L0 
     /tmp/ccQ600KR.s:19     .text:000000000000000c .L0 
     /tmp/ccQ600KR.s:21     .text:0000000000000010 .L0 
     /tmp/ccQ600KR.s:23     .text:0000000000000010 .L0 
     /tmp/ccQ600KR.s:24     .text:0000000000000010 .L0 
     /tmp/ccQ600KR.s:27     .text:0000000000000018 .L0 
     /tmp/ccQ600KR.s:28     .text:0000000000000018 .L0 
     /tmp/ccQ600KR.s:34     .text:0000000000000020 .L0 
  src/../h/riscv.hpp:136    .text:0000000000000020 .L0 
     /tmp/ccQ600KR.s:44     .text:0000000000000024 .L0 
     /tmp/ccQ600KR.s:45     .text:0000000000000024 .L0 
     /tmp/ccQ600KR.s:49     .text:0000000000000030 .L0 
     /tmp/ccQ600KR.s:50     .text:0000000000000030 .L0 
     /tmp/ccQ600KR.s:51     .text:0000000000000030 .L0 
     /tmp/ccQ600KR.s:57     .text:0000000000000044 .L0 
     /tmp/ccQ600KR.s:58     .text:0000000000000044 .L0 
     /tmp/ccQ600KR.s:59     .text:0000000000000044 .L0 
     /tmp/ccQ600KR.s:65     .text:000000000000005c .L0 
     /tmp/ccQ600KR.s:66     .text:000000000000005c .L0 
     /tmp/ccQ600KR.s:70     .text:0000000000000068 .L0 
     /tmp/ccQ600KR.s:71     .text:0000000000000068 .L0 
     /tmp/ccQ600KR.s:73     .text:0000000000000070 .L0 
     /tmp/ccQ600KR.s:75     .text:0000000000000074 .L0 
     /tmp/ccQ600KR.s:76     .text:0000000000000074 .L0 
     /tmp/ccQ600KR.s:78     .text:0000000000000078 .L0 
     /tmp/ccQ600KR.s:80     .text:000000000000007c .L0 
     /tmp/ccQ600KR.s:89     .text:000000000000007c .L0 
     /tmp/ccQ600KR.s:28     .text:0000000000000018 .L0 
     /tmp/ccQ600KR.s:60     .text:0000000000000048 .L0 
     /tmp/ccQ600KR.s:1281   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccQ600KR.s:2398   .debug_str:00000000000008c9 .LASF168
     /tmp/ccQ600KR.s:2192   .debug_str:00000000000002d0 .LASF169
     /tmp/ccQ600KR.s:2410   .debug_str:00000000000009db .LASF170
     /tmp/ccQ600KR.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccQ600KR.s:83     .text:000000000000007c .Letext0
     /tmp/ccQ600KR.s:2108   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccQ600KR.s:2214   .debug_str:0000000000000382 .LASF0
     /tmp/ccQ600KR.s:2242   .debug_str:0000000000000454 .LASF1
     /tmp/ccQ600KR.s:2338   .debug_str:0000000000000731 .LASF2
     /tmp/ccQ600KR.s:2198   .debug_str:0000000000000307 .LASF3
     /tmp/ccQ600KR.s:2344   .debug_str:0000000000000761 .LASF4
     /tmp/ccQ600KR.s:2224   .debug_str:00000000000003c4 .LASF5
     /tmp/ccQ600KR.s:2124   .debug_str:0000000000000070 .LASF6
     /tmp/ccQ600KR.s:2312   .debug_str:0000000000000678 .LASF7
     /tmp/ccQ600KR.s:2234   .debug_str:0000000000000420 .LASF8
     /tmp/ccQ600KR.s:2196   .debug_str:00000000000002f7 .LASF9
     /tmp/ccQ600KR.s:2204   .debug_str:0000000000000336 .LASF10
     /tmp/ccQ600KR.s:2146   .debug_str:0000000000000122 .LASF11
     /tmp/ccQ600KR.s:2190   .debug_str:00000000000002c1 .LASF12
     /tmp/ccQ600KR.s:2154   .debug_str:000000000000016e .LASF13
     /tmp/ccQ600KR.s:2144   .debug_str:0000000000000112 .LASF14
GAS LISTING /tmp/ccQ600KR.s 			page 7


     /tmp/ccQ600KR.s:2378   .debug_str:000000000000085d .LASF15
     /tmp/ccQ600KR.s:2180   .debug_str:0000000000000247 .LASF16
     /tmp/ccQ600KR.s:2368   .debug_str:0000000000000817 .LASF17
     /tmp/ccQ600KR.s:2440   .debug_str:0000000000000ac9 .LASF71
     /tmp/ccQ600KR.s:2222   .debug_str:00000000000003b6 .LASF115
     /tmp/ccQ600KR.s:2362   .debug_str:00000000000007e3 .LASF117
     /tmp/ccQ600KR.s:2354   .debug_str:0000000000000798 .LASF18
     /tmp/ccQ600KR.s:2184   .debug_str:0000000000000279 .LASF20
     /tmp/ccQ600KR.s:2216   .debug_str:000000000000038f .LASF19
     /tmp/ccQ600KR.s:2446   .debug_str:0000000000000ade .LASF21
     /tmp/ccQ600KR.s:2206   .debug_str:0000000000000344 .LASF22
     /tmp/ccQ600KR.s:2212   .debug_str:000000000000036a .LASF23
     /tmp/ccQ600KR.s:2422   .debug_str:0000000000000a56 .LASF24
     /tmp/ccQ600KR.s:2416   .debug_str:0000000000000a1b .LASF26
     /tmp/ccQ600KR.s:2334   .debug_str:000000000000071d .LASF28
     /tmp/ccQ600KR.s:2294   .debug_str:00000000000005e8 .LASF30
     /tmp/ccQ600KR.s:2320   .debug_str:00000000000006b2 .LASF25
     /tmp/ccQ600KR.s:2322   .debug_str:00000000000006b9 .LASF27
     /tmp/ccQ600KR.s:2284   .debug_str:000000000000058a .LASF29
     /tmp/ccQ600KR.s:2236   .debug_str:0000000000000433 .LASF31
     /tmp/ccQ600KR.s:2448   .debug_str:0000000000000af8 .LASF32
     /tmp/ccQ600KR.s:2404   .debug_str:00000000000009a6 .LASF33
     /tmp/ccQ600KR.s:2280   .debug_str:000000000000057d .LASF34
     /tmp/ccQ600KR.s:2292   .debug_str:00000000000005d4 .LASF35
     /tmp/ccQ600KR.s:2248   .debug_str:0000000000000481 .LASF36
     /tmp/ccQ600KR.s:2324   .debug_str:00000000000006cc .LASF37
     /tmp/ccQ600KR.s:2460   .debug_str:0000000000000b3f .LASF38
     /tmp/ccQ600KR.s:2220   .debug_str:00000000000003a2 .LASF39
     /tmp/ccQ600KR.s:2374   .debug_str:0000000000000845 .LASF40
     /tmp/ccQ600KR.s:2348   .debug_str:000000000000076d .LASF41
     /tmp/ccQ600KR.s:2350   .debug_str:0000000000000780 .LASF42
     /tmp/ccQ600KR.s:2150   .debug_str:0000000000000148 .LASF43
     /tmp/ccQ600KR.s:2174   .debug_str:0000000000000221 .LASF44
     /tmp/ccQ600KR.s:2208   .debug_str:000000000000034f .LASF45
     /tmp/ccQ600KR.s:2218   .debug_str:000000000000039c .LASF46
     /tmp/ccQ600KR.s:2168   .debug_str:00000000000001f7 .LASF47
     /tmp/ccQ600KR.s:2126   .debug_str:0000000000000077 .LASF48
     /tmp/ccQ600KR.s:2342   .debug_str:0000000000000749 .LASF49
     /tmp/ccQ600KR.s:2336   .debug_str:0000000000000726 .LASF50
     /tmp/ccQ600KR.s:2456   .debug_str:0000000000000b21 .LASF51
     /tmp/ccQ600KR.s:2442   .debug_str:0000000000000acf .LASF52
     /tmp/ccQ600KR.s:2450   .debug_str:0000000000000b00 .LASF53
     /tmp/ccQ600KR.s:2436   .debug_str:0000000000000aa1 .LASF54
     /tmp/ccQ600KR.s:2264   .debug_str:00000000000004e9 .LASF55
     /tmp/ccQ600KR.s:2420   .debug_str:0000000000000a47 .LASF56
     /tmp/ccQ600KR.s:2202   .debug_str:000000000000031a .LASF57
     /tmp/ccQ600KR.s:2352   .debug_str:0000000000000787 .LASF58
     /tmp/ccQ600KR.s:2306   .debug_str:000000000000063e .LASF59
     /tmp/ccQ600KR.s:2444   .debug_str:0000000000000ad9 .LASF60
     /tmp/ccQ600KR.s:2304   .debug_str:000000000000062d .LASF61
     /tmp/ccQ600KR.s:2226   .debug_str:00000000000003d6 .LASF62
     /tmp/ccQ600KR.s:2376   .debug_str:000000000000084c .LASF63
     /tmp/ccQ600KR.s:2316   .debug_str:0000000000000695 .LASF64
     /tmp/ccQ600KR.s:2230   .debug_str:00000000000003e1 .LASF66
     /tmp/ccQ600KR.s:2380   .debug_str:0000000000000869 .LASF65
     /tmp/ccQ600KR.s:2286   .debug_str:0000000000000591 .LASF67
     /tmp/ccQ600KR.s:2164   .debug_str:00000000000001d6 .LASF68
GAS LISTING /tmp/ccQ600KR.s 			page 8


     /tmp/ccQ600KR.s:2272   .debug_str:0000000000000535 .LASF69
     /tmp/ccQ600KR.s:2434   .debug_str:0000000000000a98 .LASF70
     /tmp/ccQ600KR.s:2382   .debug_str:000000000000087e .LASF119
     /tmp/ccQ600KR.s:2384   .debug_str:0000000000000886 .LASF72
     /tmp/ccQ600KR.s:2278   .debug_str:0000000000000566 .LASF74
     /tmp/ccQ600KR.s:2136   .debug_str:00000000000000b7 .LASF76
     /tmp/ccQ600KR.s:2418   .debug_str:0000000000000a30 .LASF78
     /tmp/ccQ600KR.s:2340   .debug_str:000000000000073f .LASF73
     /tmp/ccQ600KR.s:2142   .debug_str:00000000000000fd .LASF75
     /tmp/ccQ600KR.s:2386   .debug_str:0000000000000891 .LASF77
     /tmp/ccQ600KR.s:2186   .debug_str:0000000000000294 .LASF79
     /tmp/ccQ600KR.s:2244   .debug_str:0000000000000467 .LASF80
     /tmp/ccQ600KR.s:2332   .debug_str:000000000000070d .LASF81
     /tmp/ccQ600KR.s:2170   .debug_str:0000000000000209 .LASF82
     /tmp/ccQ600KR.s:2152   .debug_str:000000000000015b .LASF83
     /tmp/ccQ600KR.s:2396   .debug_str:00000000000008c1 .LASF84
     /tmp/ccQ600KR.s:2402   .debug_str:0000000000000999 .LASF85
     /tmp/ccQ600KR.s:2262   .debug_str:00000000000004c2 .LASF86
     /tmp/ccQ600KR.s:2302   .debug_str:0000000000000628 .LASF171
     /tmp/ccQ600KR.s:2260   .debug_str:00000000000004b6 .LASF87
     /tmp/ccQ600KR.s:2188   .debug_str:00000000000002aa .LASF88
     /tmp/ccQ600KR.s:2394   .debug_str:00000000000008bc .LASF89
     /tmp/ccQ600KR.s:2112   .debug_str:0000000000000008 .LASF90
     /tmp/ccQ600KR.s:2266   .debug_str:00000000000004ff .LASF91
     /tmp/ccQ600KR.s:2392   .debug_str:00000000000008a6 .LASF92
     /tmp/ccQ600KR.s:2148   .debug_str:0000000000000131 .LASF172
     /tmp/ccQ600KR.s:2346   .debug_str:0000000000000768 .LASF93
     /tmp/ccQ600KR.s:2122   .debug_str:0000000000000064 .LASF94
     /tmp/ccQ600KR.s:2330   .debug_str:0000000000000700 .LASF95
     /tmp/ccQ600KR.s:2360   .debug_str:00000000000007cb .LASF96
     /tmp/ccQ600KR.s:2296   .debug_str:00000000000005fd .LASF97
     /tmp/ccQ600KR.s:2246   .debug_str:000000000000046d .LASF98
     /tmp/ccQ600KR.s:2258   .debug_str:00000000000004ae .LASF99
     /tmp/ccQ600KR.s:2252   .debug_str:000000000000048f .LASF100
     /tmp/ccQ600KR.s:2428   .debug_str:0000000000000a72 .LASF101
     /tmp/ccQ600KR.s:2130   .debug_str:00000000000000a3 .LASF102
     /tmp/ccQ600KR.s:2114   .debug_str:0000000000000017 .LASF103
     /tmp/ccQ600KR.s:2454   .debug_str:0000000000000b1b .LASF104
     /tmp/ccQ600KR.s:2414   .debug_str:0000000000000a13 .LASF105
     /tmp/ccQ600KR.s:2366   .debug_str:000000000000080e .LASF106
     /tmp/ccQ600KR.s:2318   .debug_str:00000000000006aa .LASF107
     /tmp/ccQ600KR.s:2462   .debug_str:0000000000000b47 .LASF108
     /tmp/ccQ600KR.s:2172   .debug_str:0000000000000212 .LASF109
     /tmp/ccQ600KR.s:2194   .debug_str:00000000000002dd .LASF110
     /tmp/ccQ600KR.s:2158   .debug_str:0000000000000199 .LASF111
     /tmp/ccQ600KR.s:2364   .debug_str:0000000000000802 .LASF112
     /tmp/ccQ600KR.s:2110   .debug_str:0000000000000000 .LASF113
     /tmp/ccQ600KR.s:2400   .debug_str:000000000000098d .LASF114
     /tmp/ccQ600KR.s:2162   .debug_str:00000000000001c8 .LASF116
     /tmp/ccQ600KR.s:2120   .debug_str:000000000000003c .LASF118
     /tmp/ccQ600KR.s:2388   .debug_str:000000000000089c .LASF173
     /tmp/ccQ600KR.s:2228   .debug_str:00000000000003db .LASF120
     /tmp/ccQ600KR.s:2452   .debug_str:0000000000000b16 .LASF121
     /tmp/ccQ600KR.s:2132   .debug_str:00000000000000ad .LASF122
     /tmp/ccQ600KR.s:2240   .debug_str:000000000000044f .LASF123
     /tmp/ccQ600KR.s:2298   .debug_str:0000000000000602 .LASF124
     /tmp/ccQ600KR.s:2256   .debug_str:00000000000004a9 .LASF125
GAS LISTING /tmp/ccQ600KR.s 			page 9


     /tmp/ccQ600KR.s:2308   .debug_str:000000000000065c .LASF126
     /tmp/ccQ600KR.s:2372   .debug_str:0000000000000840 .LASF127
     /tmp/ccQ600KR.s:2134   .debug_str:00000000000000b2 .LASF128
     /tmp/ccQ600KR.s:2406   .debug_str:00000000000009ba .LASF129
     /tmp/ccQ600KR.s:2268   .debug_str:000000000000050a .LASF130
     /tmp/ccQ600KR.s:2128   .debug_str:0000000000000082 .LASF131
     /tmp/ccQ600KR.s:2210   .debug_str:0000000000000361 .LASF132
     /tmp/ccQ600KR.s:2270   .debug_str:0000000000000514 .LASF133
     /tmp/ccQ600KR.s:2458   .debug_str:0000000000000b39 .LASF134
     /tmp/ccQ600KR.s:2160   .debug_str:00000000000001a2 .LASF135
     /tmp/ccQ600KR.s:2116   .debug_str:000000000000001c .LASF136
     /tmp/ccQ600KR.s:2138   .debug_str:00000000000000c3 .LASF137
     /tmp/ccQ600KR.s:2314   .debug_str:000000000000068b .LASF138
     /tmp/ccQ600KR.s:2424   .debug_str:0000000000000a5f .LASF174
     /tmp/ccQ600KR.s:2282   .debug_str:0000000000000585 .LASF139
     /tmp/ccQ600KR.s:2274   .debug_str:0000000000000559 .LASF140
     /tmp/ccQ600KR.s:2370   .debug_str:000000000000082d .LASF141
     /tmp/ccQ600KR.s:2178   .debug_str:0000000000000230 .LASF142
     /tmp/ccQ600KR.s:2166   .debug_str:00000000000001ed .LASF175
     /tmp/ccQ600KR.s:2328   .debug_str:00000000000006e9 .LASF176
     /tmp/ccQ600KR.s:2238   .debug_str:0000000000000446 .LASF143
     /tmp/ccQ600KR.s:2140   .debug_str:00000000000000e0 .LASF144
     /tmp/ccQ600KR.s:2254   .debug_str:00000000000004a1 .LASF145
     /tmp/ccQ600KR.s:2182   .debug_str:000000000000025d .LASF146
     /tmp/ccQ600KR.s:2310   .debug_str:000000000000066c .LASF147
     /tmp/ccQ600KR.s:2438   .debug_str:0000000000000aab .LASF148
     /tmp/ccQ600KR.s:2464   .debug_str:0000000000000b4e .LASF149
     /tmp/ccQ600KR.s:2156   .debug_str:000000000000017e .LASF150
     /tmp/ccQ600KR.s:2358   .debug_str:00000000000007c0 .LASF151
     /tmp/ccQ600KR.s:2232   .debug_str:0000000000000403 .LASF152
     /tmp/ccQ600KR.s:2326   .debug_str:00000000000006e0 .LASF153
     /tmp/ccQ600KR.s:2118   .debug_str:0000000000000022 .LASF154
     /tmp/ccQ600KR.s:2276   .debug_str:000000000000055e .LASF155
     /tmp/ccQ600KR.s:2356   .debug_str:00000000000007a6 .LASF156
     /tmp/ccQ600KR.s:2390   .debug_str:00000000000008a1 .LASF157
     /tmp/ccQ600KR.s:2176   .debug_str:0000000000000227 .LASF158
     /tmp/ccQ600KR.s:2408   .debug_str:00000000000009d6 .LASF159
     /tmp/ccQ600KR.s:10     .text:0000000000000000 .LFB35
     /tmp/ccQ600KR.s:81     .text:000000000000007c .LFE35
     /tmp/ccQ600KR.s:2200   .debug_str:000000000000030e .LASF160
     /tmp/ccQ600KR.s:2430   .debug_str:0000000000000a7b .LASF161
     /tmp/ccQ600KR.s:30     .text:0000000000000020 .LBB4
     /tmp/ccQ600KR.s:42     .text:0000000000000024 .LBE4
     /tmp/ccQ600KR.s:25     .text:0000000000000018 .LVL0
     /tmp/ccQ600KR.s:47     .text:0000000000000030 .LVL3
     /tmp/ccQ600KR.s:55     .text:0000000000000044 .LVL4
     /tmp/ccQ600KR.s:63     .text:000000000000005c .LVL5
     /tmp/ccQ600KR.s:68     .text:0000000000000068 .LVL6
     /tmp/ccQ600KR.s:2250   .debug_str:0000000000000489 .LASF177
     /tmp/ccQ600KR.s:2432   .debug_str:0000000000000a85 .LASF162
     /tmp/ccQ600KR.s:2412   .debug_str:0000000000000a05 .LASF164
     /tmp/ccQ600KR.s:2300   .debug_str:0000000000000607 .LASF163
     /tmp/ccQ600KR.s:2426   .debug_str:0000000000000a64 .LASF165
     /tmp/ccQ600KR.s:2290   .debug_str:00000000000005bf .LASF166
     /tmp/ccQ600KR.s:2288   .debug_str:00000000000005b3 .LASF167
     /tmp/ccQ600KR.s:90     .debug_info:0000000000000000 .Ldebug_info0

GAS LISTING /tmp/ccQ600KR.s 			page 10


UNDEFINED SYMBOLS
_ZN15MemoryAllocator4initEv
rutina
_Z13setMaxThreadsi
_Z13thread_createPP3TCBPFvPvES2_
_Z8userMainv
_Z11thread_joinP3TCB
