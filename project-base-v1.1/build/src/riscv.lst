GAS LISTING /tmp/ccaS8p75.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 494C4C45 		.string	"ILLEGAL INSTRUCTION"
   9      47414C20 
   9      494E5354 
   9      52554354 
   9      494F4E00 
  10 0014 00000000 		.align	3
  11              	.LC1:
  12 0018 494C4C45 		.string	"ILLEGAL READ ADDRESS"
  12      47414C20 
  12      52454144 
  12      20414444 
  12      52455353 
  13 002d 000000   		.align	3
  14              	.LC2:
  15 0030 494C4C45 		.string	"ILLEGAL WRITE ADDRESS"
  15      47414C20 
  15      57524954 
  15      45204144 
  15      44524553 
  16              		.text
  17              		.align	2
  18              		.globl	_ZN5Riscv13obradaprekidaEmmmmm
  20              	_ZN5Riscv13obradaprekidaEmmmmm:
  21              	.LFB41:
  22              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** #include "../h/MemoryAllocator.hpp"
   3:src/riscv.cpp **** #include "../lib/hw.h"
   4:src/riscv.cpp **** #include "../lib/console.h"
   5:src/riscv.cpp **** #include "../h/syscall_c.hpp"
   6:src/riscv.cpp **** #include "../h/TCB.hpp"
   7:src/riscv.cpp **** #include "../h/_sem.hpp"
   8:src/riscv.cpp **** #include "../test/printing.hpp"
   9:src/riscv.cpp **** 
  10:src/riscv.cpp **** enum scause {
  11:src/riscv.cpp ****     SYSCALL_U = 8,
  12:src/riscv.cpp ****     SYSCALL_S = 9,
  13:src/riscv.cpp ****     TIMER = 0x8000000000000001,
  14:src/riscv.cpp ****     CONSOLE = 0x8000000000000009,
  15:src/riscv.cpp ****     ILLEGAL_INSTRTUCION = 2,
  16:src/riscv.cpp ****     ILLEGAL_READ_ADDRESS = 5,
  17:src/riscv.cpp ****     ILLEGAL_WRITE_ADDRESS = 7,
  18:src/riscv.cpp **** };
  19:src/riscv.cpp **** 
  20:src/riscv.cpp **** void Riscv::obradaprekida(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4) {
  23              		.loc 1 20 92
  24              		.cfi_startproc
  25              	.LVL0:
  26 0000 130101FC 		addi	sp,sp,-64
GAS LISTING /tmp/ccaS8p75.s 			page 2


  27              		.cfi_def_cfa_offset 64
  28 0004 233C1102 		sd	ra,56(sp)
  29 0008 23388102 		sd	s0,48(sp)
  30 000c 23349102 		sd	s1,40(sp)
  31 0010 23302103 		sd	s2,32(sp)
  32              		.cfi_offset 1, -8
  33              		.cfi_offset 8, -16
  34              		.cfi_offset 9, -24
  35              		.cfi_offset 18, -32
  36 0014 13040104 		addi	s0,sp,64
  37              		.cfi_def_cfa 8, 0
  38 0018 93070500 		mv	a5,a0
  39 001c 13850500 		mv	a0,a1
  40              	.LVL1:
  41 0020 93050600 		mv	a1,a2
  42              	.LVL2:
  43 0024 13860600 		mv	a2,a3
  44              	.LVL3:
  45 0028 93060700 		mv	a3,a4
  46              	.LVL4:
  21:src/riscv.cpp ****     uint64 scause = r_scause();
  47              		.loc 1 21 5
  48              	.LBB16:
  49              	.LBB17:
  50              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv{
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp ****     static void obradaprekida(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4);
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****   static void pushRegisters();
  12:src/../h/riscv.hpp ****   static void popRegisters();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  15:src/../h/riscv.hpp ****     static void popSppSpie();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // read register scause
  18:src/../h/riscv.hpp ****     static uint64 r_scause();
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // write register scause
  21:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // read register sepc
  24:src/../h/riscv.hpp ****     static uint64 r_sepc();
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // write register sepc
  27:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // read register stvec
  30:src/../h/riscv.hpp ****     static uint64 r_stvec();
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // write register stvec
GAS LISTING /tmp/ccaS8p75.s 			page 3


  33:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // read register stval
  36:src/../h/riscv.hpp ****     static uint64 r_stval();
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     // write register stval
  39:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  40:src/../h/riscv.hpp **** 
  41:src/../h/riscv.hpp ****     enum BitMaskSip
  42:src/../h/riscv.hpp ****     {
  43:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  44:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  45:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  46:src/../h/riscv.hpp ****     };
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask set register sip
  49:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // mask clear register sip
  52:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // read register sip
  55:src/../h/riscv.hpp ****     static uint64 r_sip();
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     // write register sip
  58:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  59:src/../h/riscv.hpp **** 
  60:src/../h/riscv.hpp ****     enum BitMaskSstatus
  61:src/../h/riscv.hpp ****     {
  62:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  63:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  64:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  65:src/../h/riscv.hpp ****     };
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask set register sstatus
  68:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // mask clear register sstatus
  71:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // read register sstatus
  74:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // write register sstatus
  77:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     // supervisor trap
  80:src/../h/riscv.hpp ****     static void supervisorTrap();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //stvec Vector "table"
  83:src/../h/riscv.hpp ****     static void stvecVectorTable();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //read a0 register
  86:src/../h/riscv.hpp ****     static uint64 r_a0();
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp ****     //write to a0 register
  89:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
GAS LISTING /tmp/ccaS8p75.s 			page 4


  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** private:
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     // supervisor trap handler
  95:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  96:src/../h/riscv.hpp **** 
  97:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
 100:src/../h/riscv.hpp **** };
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 104:src/../h/riscv.hpp **** {
 105:src/../h/riscv.hpp ****     uint64 volatile scause;
  51              		.loc 2 105 5
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  52              		.loc 2 106 5
  53              		.loc 2 106 72 is_stmt 0
  54              	#APP
  55              	# 106 "src/../h/riscv.hpp" 1
 107              	    return scause;
  56              		csrr a4, scause
  57              	# 0 "" 2
  58              	.LVL5:
  59              	#NO_APP
  60 0030 233CE4FC 		sd	a4,-40(s0)
  61              		.loc 2 107 5 is_stmt 1
  62              		.loc 2 107 12 is_stmt 0
  63 0034 033784FD 		ld	a4,-40(s0)
  64              	.LVL6:
  65              	.LBE17:
  66              	.LBE16:
  22:src/riscv.cpp ****     uint64 sepc = r_sepc(); //cita pc
  67              		.loc 1 22 5 is_stmt 1
  68              	.LBB18:
  69              	.LBB19:
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 116:src/../h/riscv.hpp **** {
 117:src/../h/riscv.hpp ****     uint64 volatile sepc;
  70              		.loc 2 117 5
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  71              		.loc 2 118 5
  72              		.loc 2 118 64 is_stmt 0
  73              	#APP
  74              	# 118 "src/../h/riscv.hpp" 1
 119              	    return sepc;
  75              		csrr a6, sepc
  76              	# 0 "" 2
GAS LISTING /tmp/ccaS8p75.s 			page 5


  77              	#NO_APP
  78 003c 233804FD 		sd	a6,-48(s0)
  79              		.loc 2 119 5 is_stmt 1
  80              		.loc 2 119 12 is_stmt 0
  81 0040 833404FD 		ld	s1,-48(s0)
  82              	.LVL7:
  83              	.LBE19:
  84              	.LBE18:
  23:src/riscv.cpp ****     uint64 sstatus = r_sstatus();//cita status registar
  85              		.loc 1 23 5 is_stmt 1
  86              	.LBB20:
  87              	.LBB21:
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 125:src/../h/riscv.hpp **** }
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 128:src/../h/riscv.hpp **** {
 129:src/../h/riscv.hpp ****     uint64 volatile stvec;
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 131:src/../h/riscv.hpp ****     return stvec;
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     uint64 volatile stval;
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 143:src/../h/riscv.hpp ****     return stval;
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** 
 146:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 147:src/../h/riscv.hpp **** {
 148:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 149:src/../h/riscv.hpp **** }
 150:src/../h/riscv.hpp **** 
 151:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 152:src/../h/riscv.hpp **** {
 153:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
 161:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     uint64 volatile sip;
 164:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
GAS LISTING /tmp/ccaS8p75.s 			page 6


 165:src/../h/riscv.hpp ****     return sip;
 166:src/../h/riscv.hpp **** }
 167:src/../h/riscv.hpp **** 
 168:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 169:src/../h/riscv.hpp **** {
 170:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 171:src/../h/riscv.hpp **** }
 172:src/../h/riscv.hpp **** 
 173:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 174:src/../h/riscv.hpp **** {
 175:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 176:src/../h/riscv.hpp **** }
 177:src/../h/riscv.hpp **** 
 178:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 179:src/../h/riscv.hpp **** {
 180:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 181:src/../h/riscv.hpp **** }
 182:src/../h/riscv.hpp **** 
 183:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 184:src/../h/riscv.hpp **** {
 185:src/../h/riscv.hpp ****     uint64 volatile sstatus;
  88              		.loc 2 185 5
 186:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
  89              		.loc 2 186 5
  90              		.loc 2 186 76 is_stmt 0
  91              	#APP
  92              	# 186 "src/../h/riscv.hpp" 1
 187              	    return sstatus;
  93              		csrr a6, sstatus
  94              	# 0 "" 2
  95              	#NO_APP
  96 0048 233404FD 		sd	a6,-56(s0)
  97              		.loc 2 187 5 is_stmt 1
  98              		.loc 2 187 12 is_stmt 0
  99 004c 033984FC 		ld	s2,-56(s0)
 100              	.LVL8:
 101              	.LBE21:
 102              	.LBE20:
  24:src/riscv.cpp **** 
  25:src/riscv.cpp ****     if (scause == SYSCALL_S or scause == SYSCALL_U) {
 103              		.loc 1 25 5 is_stmt 1
 104              		.loc 1 25 29 is_stmt 0
 105 0050 930887FF 		addi	a7,a4,-8
 106              		.loc 1 25 5
 107 0054 13081000 		li	a6,1
 108 0058 63781805 		bleu	a7,a6,.L29
  26:src/riscv.cpp ****         switch (code) {
  27:src/riscv.cpp ****             case MEM_ALLOC:
  28:src/riscv.cpp ****                 MemoryAllocator::mem_alloc(arg1);
  29:src/riscv.cpp ****                 break;
  30:src/riscv.cpp ****             case MEM_FREE:
  31:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *) arg1);
  32:src/riscv.cpp ****                 break;
  33:src/riscv.cpp ****             case GETC:
  34:src/riscv.cpp ****                 __getc();
  35:src/riscv.cpp ****                 break;
  36:src/riscv.cpp ****             case PUTC:
GAS LISTING /tmp/ccaS8p75.s 			page 7


  37:src/riscv.cpp ****                 __putc(arg1);
  38:src/riscv.cpp ****                 break;
  39:src/riscv.cpp ****             case THREAD_CREATE:
  40:src/riscv.cpp ****                 TCB::createThread((thread_t *) arg1, (TCB::Body) arg2, (void *) arg3, (void *) arg4
  41:src/riscv.cpp ****                 break;
  42:src/riscv.cpp ****             case THREAD_EXIT:
  43:src/riscv.cpp ****                 TCB::thread_exit();
  44:src/riscv.cpp ****                 break;
  45:src/riscv.cpp ****             case THREAD_DISPATCH:
  46:src/riscv.cpp ****                 TCB::dispatch();
  47:src/riscv.cpp ****                 break;
  48:src/riscv.cpp ****             case THREAD_JOIN:
  49:src/riscv.cpp ****                 ((thread_t) arg1)->join();
  50:src/riscv.cpp ****                 break;
  51:src/riscv.cpp ****             case THREAD_WAITALL:
  52:src/riscv.cpp ****                 TCB::waitForAll();
  53:src/riscv.cpp ****                 break;
  54:src/riscv.cpp ****             case THREAD_MAX:
  55:src/riscv.cpp ****                 TCB::setMaxThread(arg1);
  56:src/riscv.cpp ****                 break;
  57:src/riscv.cpp ****             case SEM_OPEN:
  58:src/riscv.cpp ****                 _sem::sem_open((sem_t *) arg1, (long) arg2);
  59:src/riscv.cpp ****                 break;
  60:src/riscv.cpp ****             case SEM_CLOSE:
  61:src/riscv.cpp ****                 _sem::sem_close((sem_t) arg1);
  62:src/riscv.cpp ****                 break;
  63:src/riscv.cpp ****             case SEM_WAIT:
  64:src/riscv.cpp ****                 _sem::sem_wait((sem_t) arg1);
  65:src/riscv.cpp ****                 break;
  66:src/riscv.cpp ****             case SEM_SIGNAL:
  67:src/riscv.cpp ****                 _sem::sem_signal((sem_t) arg1);
  68:src/riscv.cpp ****                 break;
  69:src/riscv.cpp ****             case SEM_TRYWAIT:
  70:src/riscv.cpp ****                 _sem::sem_trywait((sem_t) arg1);
  71:src/riscv.cpp ****                 break;
  72:src/riscv.cpp ****         }
  73:src/riscv.cpp ****         w_sstatus(sstatus);
  74:src/riscv.cpp ****         w_sepc(sepc + 4);
  75:src/riscv.cpp ****     } else if (scause == TIMER) {
 109              		.loc 1 75 12 is_stmt 1
 110 005c 9307F0FF 		li	a5,-1
 111              	.LVL9:
 112 0060 9397F703 		slli	a5,a5,63
 113 0064 93871700 		addi	a5,a5,1
 114 0068 6300F714 		beq	a4,a5,.L30
  76:src/riscv.cpp ****         mc_sip(SIP_SSIE);
  77:src/riscv.cpp ****     } else if (scause == CONSOLE) {
 115              		.loc 1 77 12
 116 006c 9307F0FF 		li	a5,-1
 117 0070 9397F703 		slli	a5,a5,63
 118 0074 93879700 		addi	a5,a5,9
 119 0078 630EF712 		beq	a4,a5,.L31
  78:src/riscv.cpp ****         console_handler();
  79:src/riscv.cpp ****     } else if (scause == ILLEGAL_INSTRTUCION) {
 120              		.loc 1 79 12
 121 007c 93072000 		li	a5,2
 122 0080 6300F714 		beq	a4,a5,.L32
GAS LISTING /tmp/ccaS8p75.s 			page 8


  80:src/riscv.cpp ****         printString("ILLEGAL INSTRUCTION");
  81:src/riscv.cpp ****         while (true);
  82:src/riscv.cpp ****     } else if (scause == ILLEGAL_READ_ADDRESS) {
 123              		.loc 1 82 12
 124 0084 93075000 		li	a5,5
 125 0088 6306F714 		beq	a4,a5,.L33
  83:src/riscv.cpp ****         printString("ILLEGAL READ ADDRESS");
  84:src/riscv.cpp ****         while (true);
  85:src/riscv.cpp ****     } else if (scause == ILLEGAL_WRITE_ADDRESS) {
 126              		.loc 1 85 12
 127 008c 93077000 		li	a5,7
 128 0090 6318F704 		bne	a4,a5,.L1
  86:src/riscv.cpp ****         printString("ILLEGAL WRITE ADDRESS");
 129              		.loc 1 86 9
 130              		.loc 1 86 20 is_stmt 0
 131 0094 17050000 		lla	a0,.LC2
 131      13050500 
 132              	.LVL10:
 133 009c 97000000 		call	_Z11printStringPKc@plt
 133      E7800000 
 134              	.LVL11:
 135              	.L27:
  87:src/riscv.cpp ****         while (true);
 136              		.loc 1 87 9 is_stmt 1 discriminator 3
 137              		.loc 1 87 9 discriminator 3
 138 00a4 6F000000 		j	.L27
 139              	.LVL12:
 140              	.L29:
  26:src/riscv.cpp ****             case MEM_ALLOC:
 141              		.loc 1 26 9
 142 00a8 13072004 		li	a4,66
 143              	.LVL13:
 144 00ac 6364F702 		bgtu	a5,a4,.L3
 145 00b0 93972700 		slli	a5,a5,2
 146              	.LVL14:
 147 00b4 17070000 		lla	a4,.L5
 147      13070700 
 148 00bc B387E700 		add	a5,a5,a4
 149 00c0 83A70700 		lw	a5,0(a5)
 150 00c4 B387E700 		add	a5,a5,a4
 151 00c8 67800700 		jr	a5
 152              		.section	.rodata
 153              		.align	2
 154              		.align	2
 155              	.L5:
 156 0000 00000000 		.word	.L3-.L5
 157 0004 00000000 		.word	.L19-.L5
 158 0008 00000000 		.word	.L18-.L5
 159 000c 00000000 		.word	.L3-.L5
 160 0010 00000000 		.word	.L3-.L5
 161 0014 00000000 		.word	.L3-.L5
 162 0018 00000000 		.word	.L3-.L5
 163 001c 00000000 		.word	.L3-.L5
 164 0020 00000000 		.word	.L3-.L5
 165 0024 00000000 		.word	.L3-.L5
 166 0028 00000000 		.word	.L3-.L5
 167 002c 00000000 		.word	.L3-.L5
GAS LISTING /tmp/ccaS8p75.s 			page 9


 168 0030 00000000 		.word	.L3-.L5
 169 0034 00000000 		.word	.L3-.L5
 170 0038 00000000 		.word	.L3-.L5
 171 003c 00000000 		.word	.L3-.L5
 172 0040 00000000 		.word	.L3-.L5
 173 0044 00000000 		.word	.L17-.L5
 174 0048 00000000 		.word	.L16-.L5
 175 004c 00000000 		.word	.L15-.L5
 176 0050 00000000 		.word	.L14-.L5
 177 0054 00000000 		.word	.L13-.L5
 178 0058 00000000 		.word	.L12-.L5
 179 005c 00000000 		.word	.L3-.L5
 180 0060 00000000 		.word	.L3-.L5
 181 0064 00000000 		.word	.L3-.L5
 182 0068 00000000 		.word	.L3-.L5
 183 006c 00000000 		.word	.L3-.L5
 184 0070 00000000 		.word	.L3-.L5
 185 0074 00000000 		.word	.L3-.L5
 186 0078 00000000 		.word	.L3-.L5
 187 007c 00000000 		.word	.L3-.L5
 188 0080 00000000 		.word	.L3-.L5
 189 0084 00000000 		.word	.L11-.L5
 190 0088 00000000 		.word	.L10-.L5
 191 008c 00000000 		.word	.L9-.L5
 192 0090 00000000 		.word	.L8-.L5
 193 0094 00000000 		.word	.L3-.L5
 194 0098 00000000 		.word	.L7-.L5
 195 009c 00000000 		.word	.L3-.L5
 196 00a0 00000000 		.word	.L3-.L5
 197 00a4 00000000 		.word	.L3-.L5
 198 00a8 00000000 		.word	.L3-.L5
 199 00ac 00000000 		.word	.L3-.L5
 200 00b0 00000000 		.word	.L3-.L5
 201 00b4 00000000 		.word	.L3-.L5
 202 00b8 00000000 		.word	.L3-.L5
 203 00bc 00000000 		.word	.L3-.L5
 204 00c0 00000000 		.word	.L3-.L5
 205 00c4 00000000 		.word	.L3-.L5
 206 00c8 00000000 		.word	.L3-.L5
 207 00cc 00000000 		.word	.L3-.L5
 208 00d0 00000000 		.word	.L3-.L5
 209 00d4 00000000 		.word	.L3-.L5
 210 00d8 00000000 		.word	.L3-.L5
 211 00dc 00000000 		.word	.L3-.L5
 212 00e0 00000000 		.word	.L3-.L5
 213 00e4 00000000 		.word	.L3-.L5
 214 00e8 00000000 		.word	.L3-.L5
 215 00ec 00000000 		.word	.L3-.L5
 216 00f0 00000000 		.word	.L3-.L5
 217 00f4 00000000 		.word	.L3-.L5
 218 00f8 00000000 		.word	.L3-.L5
 219 00fc 00000000 		.word	.L3-.L5
 220 0100 00000000 		.word	.L3-.L5
 221 0104 00000000 		.word	.L6-.L5
 222 0108 00000000 		.word	.L4-.L5
 223              		.text
 224              	.L19:
GAS LISTING /tmp/ccaS8p75.s 			page 10


  27:src/riscv.cpp ****                 MemoryAllocator::mem_alloc(arg1);
 225              		.loc 1 27 13
  28:src/riscv.cpp ****                 break;
 226              		.loc 1 28 17
  28:src/riscv.cpp ****                 break;
 227              		.loc 1 28 43 is_stmt 0
 228 00cc 97000000 		call	_ZN15MemoryAllocator9mem_allocEm@plt
 228      E7800000 
 229              	.LVL15:
  29:src/riscv.cpp ****             case MEM_FREE:
 230              		.loc 1 29 17 is_stmt 1
 231              	.L3:
  73:src/riscv.cpp ****         w_sepc(sepc + 4);
 232              		.loc 1 73 9
 233              	.LBB22:
 234              	.LBB23:
 188:src/../h/riscv.hpp **** }
 189:src/../h/riscv.hpp **** 
 190:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 191:src/../h/riscv.hpp **** {
 192:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 235              		.loc 2 192 5
 236              		.loc 2 192 77 is_stmt 0
 237              	#APP
 238              	# 192 "src/../h/riscv.hpp" 1
 193              	}
 239              		csrw sstatus, s2
 240              	# 0 "" 2
 241              	.LVL16:
 242              	#NO_APP
 243              	.LBE23:
 244              	.LBE22:
  74:src/riscv.cpp ****     } else if (scause == TIMER) {
 245              		.loc 1 74 9 is_stmt 1
  74:src/riscv.cpp ****     } else if (scause == TIMER) {
 246              		.loc 1 74 15 is_stmt 0
 247 00d8 93844400 		addi	s1,s1,4
 248              	.LVL17:
 249              	.LBB24:
 250              	.LBB25:
 124:src/../h/riscv.hpp **** }
 251              		.loc 2 124 5 is_stmt 1
 124:src/../h/riscv.hpp **** }
 252              		.loc 2 124 65 is_stmt 0
 253              	#APP
 254              	# 124 "src/../h/riscv.hpp" 1
 255              		csrw sepc, s1
 256              	# 0 "" 2
 257              	.LVL18:
 258              	#NO_APP
 259              	.L1:
 260              	.LBE25:
 261              	.LBE24:
  88:src/riscv.cpp ****     }
  89:src/riscv.cpp **** }
 262              		.loc 1 89 1
 263 00e0 83308103 		ld	ra,56(sp)
GAS LISTING /tmp/ccaS8p75.s 			page 11


 264              		.cfi_remember_state
 265              		.cfi_restore 1
 266 00e4 03340103 		ld	s0,48(sp)
 267              		.cfi_restore 8
 268              		.cfi_def_cfa 2, 64
 269 00e8 83348102 		ld	s1,40(sp)
 270              		.cfi_restore 9
 271 00ec 03390102 		ld	s2,32(sp)
 272              		.cfi_restore 18
 273              	.LVL19:
 274 00f0 13010104 		addi	sp,sp,64
 275              		.cfi_def_cfa_offset 0
 276 00f4 67800000 		jr	ra
 277              	.LVL20:
 278              	.L18:
 279              		.cfi_restore_state
  30:src/riscv.cpp ****                 MemoryAllocator::mem_free((void *) arg1);
 280              		.loc 1 30 13 is_stmt 1
  31:src/riscv.cpp ****                 break;
 281              		.loc 1 31 17
  31:src/riscv.cpp ****                 break;
 282              		.loc 1 31 42 is_stmt 0
 283 00f8 97000000 		call	_ZN15MemoryAllocator8mem_freeEPv@plt
 283      E7800000 
 284              	.LVL21:
  32:src/riscv.cpp ****             case GETC:
 285              		.loc 1 32 17 is_stmt 1
 286 0100 6FF05FFD 		j	.L3
 287              	.LVL22:
 288              	.L6:
  33:src/riscv.cpp ****                 __getc();
 289              		.loc 1 33 13
  34:src/riscv.cpp ****                 break;
 290              		.loc 1 34 17
  34:src/riscv.cpp ****                 break;
 291              		.loc 1 34 23 is_stmt 0
 292 0104 97000000 		call	__getc@plt
 292      E7800000 
 293              	.LVL23:
  35:src/riscv.cpp ****             case PUTC:
 294              		.loc 1 35 17 is_stmt 1
 295 010c 6FF09FFC 		j	.L3
 296              	.LVL24:
 297              	.L4:
  36:src/riscv.cpp ****                 __putc(arg1);
 298              		.loc 1 36 13
  37:src/riscv.cpp ****                 break;
 299              		.loc 1 37 17
  37:src/riscv.cpp ****                 break;
 300              		.loc 1 37 23 is_stmt 0
 301 0110 1375F50F 		andi	a0,a0,0xff
 302              	.LVL25:
 303 0114 97000000 		call	__putc@plt
 303      E7800000 
 304              	.LVL26:
  38:src/riscv.cpp ****             case THREAD_CREATE:
 305              		.loc 1 38 17 is_stmt 1
GAS LISTING /tmp/ccaS8p75.s 			page 12


 306 011c 6FF09FFB 		j	.L3
 307              	.LVL27:
 308              	.L17:
  39:src/riscv.cpp ****                 TCB::createThread((thread_t *) arg1, (TCB::Body) arg2, (void *) arg3, (void *) arg4
 309              		.loc 1 39 13
  40:src/riscv.cpp ****                 break;
 310              		.loc 1 40 17
  40:src/riscv.cpp ****                 break;
 311              		.loc 1 40 34 is_stmt 0
 312 0120 97000000 		call	_ZN3TCB12createThreadEPPS_PFvPvES2_S2_@plt
 312      E7800000 
 313              	.LVL28:
  41:src/riscv.cpp ****             case THREAD_EXIT:
 314              		.loc 1 41 17 is_stmt 1
 315 0128 6FF0DFFA 		j	.L3
 316              	.LVL29:
 317              	.L16:
  42:src/riscv.cpp ****                 TCB::thread_exit();
 318              		.loc 1 42 13
  43:src/riscv.cpp ****                 break;
 319              		.loc 1 43 17
  43:src/riscv.cpp ****                 break;
 320              		.loc 1 43 33 is_stmt 0
 321 012c 97000000 		call	_ZN3TCB11thread_exitEv@plt
 321      E7800000 
 322              	.LVL30:
  44:src/riscv.cpp ****             case THREAD_DISPATCH:
 323              		.loc 1 44 17 is_stmt 1
 324 0134 6FF01FFA 		j	.L3
 325              	.LVL31:
 326              	.L15:
  45:src/riscv.cpp ****                 TCB::dispatch();
 327              		.loc 1 45 13
  46:src/riscv.cpp ****                 break;
 328              		.loc 1 46 17
  46:src/riscv.cpp ****                 break;
 329              		.loc 1 46 30 is_stmt 0
 330 0138 97000000 		call	_ZN3TCB8dispatchEv@plt
 330      E7800000 
 331              	.LVL32:
  47:src/riscv.cpp ****             case THREAD_JOIN:
 332              		.loc 1 47 17 is_stmt 1
 333 0140 6FF05FF9 		j	.L3
 334              	.LVL33:
 335              	.L14:
  48:src/riscv.cpp ****                 ((thread_t) arg1)->join();
 336              		.loc 1 48 13
  49:src/riscv.cpp ****                 break;
 337              		.loc 1 49 17
  49:src/riscv.cpp ****                 break;
 338              		.loc 1 49 40 is_stmt 0
 339 0144 97000000 		call	_ZN3TCB4joinEv@plt
 339      E7800000 
 340              	.LVL34:
  50:src/riscv.cpp ****             case THREAD_WAITALL:
 341              		.loc 1 50 17 is_stmt 1
 342 014c 6FF09FF8 		j	.L3
GAS LISTING /tmp/ccaS8p75.s 			page 13


 343              	.LVL35:
 344              	.L13:
  51:src/riscv.cpp ****                 TCB::waitForAll();
 345              		.loc 1 51 13
  52:src/riscv.cpp ****                 break;
 346              		.loc 1 52 17
  52:src/riscv.cpp ****                 break;
 347              		.loc 1 52 32 is_stmt 0
 348 0150 97000000 		call	_ZN3TCB10waitForAllEv@plt
 348      E7800000 
 349              	.LVL36:
  53:src/riscv.cpp ****             case THREAD_MAX:
 350              		.loc 1 53 17 is_stmt 1
 351 0158 6FF0DFF7 		j	.L3
 352              	.LVL37:
 353              	.L12:
  54:src/riscv.cpp ****                 TCB::setMaxThread(arg1);
 354              		.loc 1 54 13
  55:src/riscv.cpp ****                 break;
 355              		.loc 1 55 17
  55:src/riscv.cpp ****                 break;
 356              		.loc 1 55 34 is_stmt 0
 357 015c 1B050500 		sext.w	a0,a0
 358              	.LVL38:
 359 0160 97000000 		call	_ZN3TCB12setMaxThreadEi@plt
 359      E7800000 
 360              	.LVL39:
  56:src/riscv.cpp ****             case SEM_OPEN:
 361              		.loc 1 56 17 is_stmt 1
 362 0168 6FF0DFF6 		j	.L3
 363              	.LVL40:
 364              	.L11:
  57:src/riscv.cpp ****                 _sem::sem_open((sem_t *) arg1, (long) arg2);
 365              		.loc 1 57 13
  58:src/riscv.cpp ****                 break;
 366              		.loc 1 58 17
  58:src/riscv.cpp ****                 break;
 367              		.loc 1 58 31 is_stmt 0
 368 016c 97000000 		call	_ZN4_sem8sem_openEPPS_l@plt
 368      E7800000 
 369              	.LVL41:
  59:src/riscv.cpp ****             case SEM_CLOSE:
 370              		.loc 1 59 17 is_stmt 1
 371 0174 6FF01FF6 		j	.L3
 372              	.LVL42:
 373              	.L10:
  60:src/riscv.cpp ****                 _sem::sem_close((sem_t) arg1);
 374              		.loc 1 60 13
  61:src/riscv.cpp ****                 break;
 375              		.loc 1 61 17
  61:src/riscv.cpp ****                 break;
 376              		.loc 1 61 32 is_stmt 0
 377 0178 97000000 		call	_ZN4_sem9sem_closeEPS_@plt
 377      E7800000 
 378              	.LVL43:
  62:src/riscv.cpp ****             case SEM_WAIT:
 379              		.loc 1 62 17 is_stmt 1
GAS LISTING /tmp/ccaS8p75.s 			page 14


 380 0180 6FF05FF5 		j	.L3
 381              	.LVL44:
 382              	.L9:
  63:src/riscv.cpp ****                 _sem::sem_wait((sem_t) arg1);
 383              		.loc 1 63 13
  64:src/riscv.cpp ****                 break;
 384              		.loc 1 64 17
  64:src/riscv.cpp ****                 break;
 385              		.loc 1 64 31 is_stmt 0
 386 0184 97000000 		call	_ZN4_sem8sem_waitEPS_@plt
 386      E7800000 
 387              	.LVL45:
  65:src/riscv.cpp ****             case SEM_SIGNAL:
 388              		.loc 1 65 17 is_stmt 1
 389 018c 6FF09FF4 		j	.L3
 390              	.LVL46:
 391              	.L8:
  66:src/riscv.cpp ****                 _sem::sem_signal((sem_t) arg1);
 392              		.loc 1 66 13
  67:src/riscv.cpp ****                 break;
 393              		.loc 1 67 17
  67:src/riscv.cpp ****                 break;
 394              		.loc 1 67 33 is_stmt 0
 395 0190 97000000 		call	_ZN4_sem10sem_signalEPS_@plt
 395      E7800000 
 396              	.LVL47:
  68:src/riscv.cpp ****             case SEM_TRYWAIT:
 397              		.loc 1 68 17 is_stmt 1
 398 0198 6FF0DFF3 		j	.L3
 399              	.LVL48:
 400              	.L7:
  69:src/riscv.cpp ****                 _sem::sem_trywait((sem_t) arg1);
 401              		.loc 1 69 13
  70:src/riscv.cpp ****                 break;
 402              		.loc 1 70 17
  70:src/riscv.cpp ****                 break;
 403              		.loc 1 70 34 is_stmt 0
 404 019c 97000000 		call	_ZN4_sem11sem_trywaitEPS_@plt
 404      E7800000 
 405              	.LVL49:
  71:src/riscv.cpp ****         }
 406              		.loc 1 71 17 is_stmt 1
 407 01a4 6FF01FF3 		j	.L3
 408              	.LVL50:
 409              	.L30:
  76:src/riscv.cpp ****     } else if (scause == CONSOLE) {
 410              		.loc 1 76 9
 411              	.LBB26:
 412              	.LBB27:
 158:src/../h/riscv.hpp **** }
 413              		.loc 2 158 5
 158:src/../h/riscv.hpp **** }
 414              		.loc 2 158 64 is_stmt 0
 415 01a8 93072000 		li	a5,2
 416              	#APP
 417              	# 158 "src/../h/riscv.hpp" 1
 159:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccaS8p75.s 			page 15


 418              		csrc sip, a5
 419              	# 0 "" 2
 420              		.loc 2 159 1
 421              	#NO_APP
 422 01b0 6FF01FF3 		j	.L1
 423              	.LVL51:
 424              	.L31:
 425              	.LBE27:
 426              	.LBE26:
  78:src/riscv.cpp ****     } else if (scause == ILLEGAL_INSTRTUCION) {
 427              		.loc 1 78 9 is_stmt 1
  78:src/riscv.cpp ****     } else if (scause == ILLEGAL_INSTRTUCION) {
 428              		.loc 1 78 24 is_stmt 0
 429 01b4 97000000 		call	console_handler@plt
 429      E7800000 
 430              	.LVL52:
 431 01bc 6FF05FF2 		j	.L1
 432              	.LVL53:
 433              	.L32:
  80:src/riscv.cpp ****         while (true);
 434              		.loc 1 80 9 is_stmt 1
  80:src/riscv.cpp ****         while (true);
 435              		.loc 1 80 20 is_stmt 0
 436 01c0 17050000 		lla	a0,.LC0
 436      13050500 
 437              	.LVL54:
 438 01c8 97000000 		call	_Z11printStringPKc@plt
 438      E7800000 
 439              	.LVL55:
 440              	.L24:
  81:src/riscv.cpp ****     } else if (scause == ILLEGAL_READ_ADDRESS) {
 441              		.loc 1 81 9 is_stmt 1 discriminator 1
  81:src/riscv.cpp ****     } else if (scause == ILLEGAL_READ_ADDRESS) {
 442              		.loc 1 81 9 discriminator 1
 443 01d0 6F000000 		j	.L24
 444              	.LVL56:
 445              	.L33:
  83:src/riscv.cpp ****         while (true);
 446              		.loc 1 83 9
  83:src/riscv.cpp ****         while (true);
 447              		.loc 1 83 20 is_stmt 0
 448 01d4 17050000 		lla	a0,.LC1
 448      13050500 
 449              	.LVL57:
 450 01dc 97000000 		call	_Z11printStringPKc@plt
 450      E7800000 
 451              	.LVL58:
 452              	.L26:
  84:src/riscv.cpp ****     } else if (scause == ILLEGAL_WRITE_ADDRESS) {
 453              		.loc 1 84 9 is_stmt 1 discriminator 2
  84:src/riscv.cpp ****     } else if (scause == ILLEGAL_WRITE_ADDRESS) {
 454              		.loc 1 84 9 discriminator 2
 455 01e4 6F000000 		j	.L26
 456              		.cfi_endproc
 457              	.LFE41:
 459              		.align	2
 460              		.globl	_ZN5Riscv10popSppSpieEv
GAS LISTING /tmp/ccaS8p75.s 			page 16


 462              	_ZN5Riscv10popSppSpieEv:
 463              	.LFB42:
  90:src/riscv.cpp **** 
  91:src/riscv.cpp **** void Riscv::popSppSpie() {
 464              		.loc 1 91 26
 465              		.cfi_startproc
 466 01e8 130101FF 		addi	sp,sp,-16
 467              		.cfi_def_cfa_offset 16
 468 01ec 23348100 		sd	s0,8(sp)
 469              		.cfi_offset 8, -8
 470 01f0 13040101 		addi	s0,sp,16
 471              		.cfi_def_cfa 8, 0
  92:src/riscv.cpp ****     Riscv::mc_sstatus(Riscv::SSTATUS_SPP);
 472              		.loc 1 92 5
 473              	.LVL59:
 474              	.LBB28:
 475              	.LBB29:
 180:src/../h/riscv.hpp **** }
 476              		.loc 2 180 5
 180:src/../h/riscv.hpp **** }
 477              		.loc 2 180 68 is_stmt 0
 478 01f4 93070010 		li	a5,256
 479              	#APP
 480              	# 180 "src/../h/riscv.hpp" 1
 481              		csrc sstatus, a5
 482              	# 0 "" 2
 483              	.LVL60:
 484              	#NO_APP
 485              	.LBE29:
 486              	.LBE28:
  93:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
 487              		.loc 1 93 5 is_stmt 1
 488              		.loc 1 93 38 is_stmt 0
 489              	#APP
 490              	# 93 "src/riscv.cpp" 1
  94              	    __asm__ volatile("sret");
 491              		csrw sepc, ra
 492              	# 0 "" 2
 493              		.loc 1 94 5 is_stmt 1
 494              		.loc 1 94 29 is_stmt 0
 495              	# 94 "src/riscv.cpp" 1
  95              	}...
 496              		sret
 497              	# 0 "" 2
 498              		.loc 1 95 1
 499              	#NO_APP
 500 0204 03348100 		ld	s0,8(sp)
 501              		.cfi_restore 8
 502              		.cfi_def_cfa 2, 16
 503 0208 13010101 		addi	sp,sp,16
 504              		.cfi_def_cfa_offset 0
 505 020c 67800000 		jr	ra
 506              		.cfi_endproc
 507              	.LFE42:
 509              	.Letext0:
 510              		.file 3 "src/../h/../lib/hw.h"
 511              		.file 4 "src/../h/MemoryAllocator.hpp"
GAS LISTING /tmp/ccaS8p75.s 			page 17


 512              		.file 5 "src/../h/syscall_c.hpp"
 513              		.file 6 "src/../h/TCB.hpp"
 514              		.file 7 "src/../h/_sem.hpp"
 515              		.file 8 "src/../h/list.hpp"
 516              		.file 9 "src/../test/printing.hpp"
 517              		.file 10 "src/../lib/console.h"
GAS LISTING /tmp/ccaS8p75.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccaS8p75.s:20     .text:0000000000000000 _ZN5Riscv13obradaprekidaEmmmmm
     /tmp/ccaS8p75.s:24     .text:0000000000000000 .L0 
     /tmp/ccaS8p75.s:26     .text:0000000000000000 .L0 
     /tmp/ccaS8p75.s:27     .text:0000000000000004 .L0 
     /tmp/ccaS8p75.s:32     .text:0000000000000014 .L0 
     /tmp/ccaS8p75.s:33     .text:0000000000000014 .L0 
     /tmp/ccaS8p75.s:34     .text:0000000000000014 .L0 
     /tmp/ccaS8p75.s:35     .text:0000000000000014 .L0 
     /tmp/ccaS8p75.s:37     .text:0000000000000018 .L0 
     /tmp/ccaS8p75.s:51     .text:000000000000002c .L0 
     /tmp/ccaS8p75.s:52     .text:000000000000002c .L0 
     /tmp/ccaS8p75.s:53     .text:000000000000002c .L0 
  src/../h/riscv.hpp:106    .text:000000000000002c .L0 
     /tmp/ccaS8p75.s:62     .text:0000000000000034 .L0 
     /tmp/ccaS8p75.s:63     .text:0000000000000034 .L0 
     /tmp/ccaS8p75.s:70     .text:0000000000000038 .L0 
     /tmp/ccaS8p75.s:71     .text:0000000000000038 .L0 
     /tmp/ccaS8p75.s:72     .text:0000000000000038 .L0 
  src/../h/riscv.hpp:118    .text:0000000000000038 .L0 
     /tmp/ccaS8p75.s:80     .text:0000000000000040 .L0 
     /tmp/ccaS8p75.s:81     .text:0000000000000040 .L0 
     /tmp/ccaS8p75.s:88     .text:0000000000000044 .L0 
     /tmp/ccaS8p75.s:89     .text:0000000000000044 .L0 
     /tmp/ccaS8p75.s:90     .text:0000000000000044 .L0 
  src/../h/riscv.hpp:186    .text:0000000000000044 .L0 
     /tmp/ccaS8p75.s:98     .text:000000000000004c .L0 
     /tmp/ccaS8p75.s:99     .text:000000000000004c .L0 
     /tmp/ccaS8p75.s:104    .text:0000000000000050 .L0 
     /tmp/ccaS8p75.s:105    .text:0000000000000050 .L0 
     /tmp/ccaS8p75.s:107    .text:0000000000000054 .L0 
     /tmp/ccaS8p75.s:110    .text:000000000000005c .L0 
     /tmp/ccaS8p75.s:116    .text:000000000000006c .L0 
     /tmp/ccaS8p75.s:121    .text:000000000000007c .L0 
     /tmp/ccaS8p75.s:124    .text:0000000000000084 .L0 
     /tmp/ccaS8p75.s:127    .text:000000000000008c .L0 
     /tmp/ccaS8p75.s:130    .text:0000000000000094 .L0 
     /tmp/ccaS8p75.s:131    .text:0000000000000094 .L0 
     /tmp/ccaS8p75.s:137    .text:00000000000000a4 .L0 
     /tmp/ccaS8p75.s:138    .text:00000000000000a4 .L0 
     /tmp/ccaS8p75.s:142    .text:00000000000000a8 .L0 
     /tmp/ccaS8p75.s:226    .text:00000000000000cc .L0 
     /tmp/ccaS8p75.s:227    .text:00000000000000cc .L0 
     /tmp/ccaS8p75.s:228    .text:00000000000000cc .L0 
     /tmp/ccaS8p75.s:232    .text:00000000000000d4 .L0 
     /tmp/ccaS8p75.s:235    .text:00000000000000d4 .L0 
     /tmp/ccaS8p75.s:236    .text:00000000000000d4 .L0 
  src/../h/riscv.hpp:192    .text:00000000000000d4 .L0 
     /tmp/ccaS8p75.s:246    .text:00000000000000d8 .L0 
     /tmp/ccaS8p75.s:247    .text:00000000000000d8 .L0 
     /tmp/ccaS8p75.s:252    .text:00000000000000dc .L0 
  src/../h/riscv.hpp:124    .text:00000000000000dc .L0 
     /tmp/ccaS8p75.s:263    .text:00000000000000e0 .L0 
     /tmp/ccaS8p75.s:264    .text:00000000000000e4 .L0 
     /tmp/ccaS8p75.s:265    .text:00000000000000e4 .L0 
     /tmp/ccaS8p75.s:267    .text:00000000000000e8 .L0 
GAS LISTING /tmp/ccaS8p75.s 			page 19


     /tmp/ccaS8p75.s:268    .text:00000000000000e8 .L0 
     /tmp/ccaS8p75.s:270    .text:00000000000000ec .L0 
     /tmp/ccaS8p75.s:272    .text:00000000000000f0 .L0 
     /tmp/ccaS8p75.s:275    .text:00000000000000f4 .L0 
     /tmp/ccaS8p75.s:279    .text:00000000000000f8 .L0 
     /tmp/ccaS8p75.s:281    .text:00000000000000f8 .L0 
     /tmp/ccaS8p75.s:282    .text:00000000000000f8 .L0 
     /tmp/ccaS8p75.s:283    .text:00000000000000f8 .L0 
     /tmp/ccaS8p75.s:286    .text:0000000000000100 .L0 
     /tmp/ccaS8p75.s:290    .text:0000000000000104 .L0 
     /tmp/ccaS8p75.s:291    .text:0000000000000104 .L0 
     /tmp/ccaS8p75.s:292    .text:0000000000000104 .L0 
     /tmp/ccaS8p75.s:295    .text:000000000000010c .L0 
     /tmp/ccaS8p75.s:299    .text:0000000000000110 .L0 
     /tmp/ccaS8p75.s:300    .text:0000000000000110 .L0 
     /tmp/ccaS8p75.s:301    .text:0000000000000110 .L0 
     /tmp/ccaS8p75.s:306    .text:000000000000011c .L0 
     /tmp/ccaS8p75.s:310    .text:0000000000000120 .L0 
     /tmp/ccaS8p75.s:311    .text:0000000000000120 .L0 
     /tmp/ccaS8p75.s:312    .text:0000000000000120 .L0 
     /tmp/ccaS8p75.s:315    .text:0000000000000128 .L0 
     /tmp/ccaS8p75.s:319    .text:000000000000012c .L0 
     /tmp/ccaS8p75.s:320    .text:000000000000012c .L0 
     /tmp/ccaS8p75.s:321    .text:000000000000012c .L0 
     /tmp/ccaS8p75.s:324    .text:0000000000000134 .L0 
     /tmp/ccaS8p75.s:328    .text:0000000000000138 .L0 
     /tmp/ccaS8p75.s:329    .text:0000000000000138 .L0 
     /tmp/ccaS8p75.s:330    .text:0000000000000138 .L0 
     /tmp/ccaS8p75.s:333    .text:0000000000000140 .L0 
     /tmp/ccaS8p75.s:337    .text:0000000000000144 .L0 
     /tmp/ccaS8p75.s:338    .text:0000000000000144 .L0 
     /tmp/ccaS8p75.s:339    .text:0000000000000144 .L0 
     /tmp/ccaS8p75.s:342    .text:000000000000014c .L0 
     /tmp/ccaS8p75.s:346    .text:0000000000000150 .L0 
     /tmp/ccaS8p75.s:347    .text:0000000000000150 .L0 
     /tmp/ccaS8p75.s:348    .text:0000000000000150 .L0 
     /tmp/ccaS8p75.s:351    .text:0000000000000158 .L0 
     /tmp/ccaS8p75.s:355    .text:000000000000015c .L0 
     /tmp/ccaS8p75.s:356    .text:000000000000015c .L0 
     /tmp/ccaS8p75.s:357    .text:000000000000015c .L0 
     /tmp/ccaS8p75.s:362    .text:0000000000000168 .L0 
     /tmp/ccaS8p75.s:366    .text:000000000000016c .L0 
     /tmp/ccaS8p75.s:367    .text:000000000000016c .L0 
     /tmp/ccaS8p75.s:368    .text:000000000000016c .L0 
     /tmp/ccaS8p75.s:371    .text:0000000000000174 .L0 
     /tmp/ccaS8p75.s:375    .text:0000000000000178 .L0 
     /tmp/ccaS8p75.s:376    .text:0000000000000178 .L0 
     /tmp/ccaS8p75.s:377    .text:0000000000000178 .L0 
     /tmp/ccaS8p75.s:380    .text:0000000000000180 .L0 
     /tmp/ccaS8p75.s:384    .text:0000000000000184 .L0 
     /tmp/ccaS8p75.s:385    .text:0000000000000184 .L0 
     /tmp/ccaS8p75.s:386    .text:0000000000000184 .L0 
     /tmp/ccaS8p75.s:389    .text:000000000000018c .L0 
     /tmp/ccaS8p75.s:393    .text:0000000000000190 .L0 
     /tmp/ccaS8p75.s:394    .text:0000000000000190 .L0 
     /tmp/ccaS8p75.s:395    .text:0000000000000190 .L0 
     /tmp/ccaS8p75.s:398    .text:0000000000000198 .L0 
GAS LISTING /tmp/ccaS8p75.s 			page 20


     /tmp/ccaS8p75.s:402    .text:000000000000019c .L0 
     /tmp/ccaS8p75.s:403    .text:000000000000019c .L0 
     /tmp/ccaS8p75.s:404    .text:000000000000019c .L0 
     /tmp/ccaS8p75.s:407    .text:00000000000001a4 .L0 
     /tmp/ccaS8p75.s:413    .text:00000000000001a8 .L0 
     /tmp/ccaS8p75.s:414    .text:00000000000001a8 .L0 
     /tmp/ccaS8p75.s:415    .text:00000000000001a8 .L0 
     /tmp/ccaS8p75.s:422    .text:00000000000001b0 .L0 
     /tmp/ccaS8p75.s:428    .text:00000000000001b4 .L0 
     /tmp/ccaS8p75.s:429    .text:00000000000001b4 .L0 
     /tmp/ccaS8p75.s:435    .text:00000000000001c0 .L0 
     /tmp/ccaS8p75.s:436    .text:00000000000001c0 .L0 
     /tmp/ccaS8p75.s:442    .text:00000000000001d0 .L0 
     /tmp/ccaS8p75.s:443    .text:00000000000001d0 .L0 
     /tmp/ccaS8p75.s:447    .text:00000000000001d4 .L0 
     /tmp/ccaS8p75.s:448    .text:00000000000001d4 .L0 
     /tmp/ccaS8p75.s:454    .text:00000000000001e4 .L0 
     /tmp/ccaS8p75.s:455    .text:00000000000001e4 .L0 
     /tmp/ccaS8p75.s:456    .text:00000000000001e8 .L0 
     /tmp/ccaS8p75.s:462    .text:00000000000001e8 _ZN5Riscv10popSppSpieEv
     /tmp/ccaS8p75.s:465    .text:00000000000001e8 .L0 
     /tmp/ccaS8p75.s:466    .text:00000000000001e8 .L0 
     /tmp/ccaS8p75.s:467    .text:00000000000001ec .L0 
     /tmp/ccaS8p75.s:469    .text:00000000000001f0 .L0 
     /tmp/ccaS8p75.s:471    .text:00000000000001f4 .L0 
     /tmp/ccaS8p75.s:476    .text:00000000000001f4 .L0 
     /tmp/ccaS8p75.s:477    .text:00000000000001f4 .L0 
     /tmp/ccaS8p75.s:478    .text:00000000000001f4 .L0 
     /tmp/ccaS8p75.s:488    .text:00000000000001fc .L0 
       src/riscv.cpp:93     .text:00000000000001fc .L0 
     /tmp/ccaS8p75.s:494    .text:0000000000000200 .L0 
       src/riscv.cpp:94     .text:0000000000000200 .L0 
     /tmp/ccaS8p75.s:500    .text:0000000000000204 .L0 
     /tmp/ccaS8p75.s:501    .text:0000000000000208 .L0 
     /tmp/ccaS8p75.s:502    .text:0000000000000208 .L0 
     /tmp/ccaS8p75.s:504    .text:000000000000020c .L0 
     /tmp/ccaS8p75.s:506    .text:0000000000000210 .L0 
     /tmp/ccaS8p75.s:518    .text:0000000000000210 .L0 
     /tmp/ccaS8p75.s:14     .rodata.str1.8:0000000000000030 .LC2
     /tmp/ccaS8p75.s:131    .text:0000000000000094 .L0 
     /tmp/ccaS8p75.s:155    .rodata:0000000000000000 .L5
     /tmp/ccaS8p75.s:147    .text:00000000000000b4 .L0 
     /tmp/ccaS8p75.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccaS8p75.s:436    .text:00000000000001c0 .L0 
     /tmp/ccaS8p75.s:11     .rodata.str1.8:0000000000000018 .LC1
     /tmp/ccaS8p75.s:448    .text:00000000000001d4 .L0 
     /tmp/ccaS8p75.s:140    .text:00000000000000a8 .L29
     /tmp/ccaS8p75.s:409    .text:00000000000001a8 .L30
     /tmp/ccaS8p75.s:424    .text:00000000000001b4 .L31
     /tmp/ccaS8p75.s:433    .text:00000000000001c0 .L32
     /tmp/ccaS8p75.s:445    .text:00000000000001d4 .L33
     /tmp/ccaS8p75.s:259    .text:00000000000000e0 .L1
     /tmp/ccaS8p75.s:135    .text:00000000000000a4 .L27
     /tmp/ccaS8p75.s:231    .text:00000000000000d4 .L3
     /tmp/ccaS8p75.s:440    .text:00000000000001d0 .L24
     /tmp/ccaS8p75.s:452    .text:00000000000001e4 .L26
     /tmp/ccaS8p75.s:224    .text:00000000000000cc .L19
GAS LISTING /tmp/ccaS8p75.s 			page 21


     /tmp/ccaS8p75.s:278    .text:00000000000000f8 .L18
     /tmp/ccaS8p75.s:308    .text:0000000000000120 .L17
     /tmp/ccaS8p75.s:317    .text:000000000000012c .L16
     /tmp/ccaS8p75.s:326    .text:0000000000000138 .L15
     /tmp/ccaS8p75.s:335    .text:0000000000000144 .L14
     /tmp/ccaS8p75.s:344    .text:0000000000000150 .L13
     /tmp/ccaS8p75.s:353    .text:000000000000015c .L12
     /tmp/ccaS8p75.s:364    .text:000000000000016c .L11
     /tmp/ccaS8p75.s:373    .text:0000000000000178 .L10
     /tmp/ccaS8p75.s:382    .text:0000000000000184 .L9
     /tmp/ccaS8p75.s:391    .text:0000000000000190 .L8
     /tmp/ccaS8p75.s:400    .text:000000000000019c .L7
     /tmp/ccaS8p75.s:288    .text:0000000000000104 .L6
     /tmp/ccaS8p75.s:297    .text:0000000000000110 .L4
     /tmp/ccaS8p75.s:2168   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccaS8p75.s:4648   .debug_str:0000000000000a66 .LASF215
     /tmp/ccaS8p75.s:4708   .debug_str:0000000000000ca4 .LASF216
     /tmp/ccaS8p75.s:4656   .debug_str:0000000000000b67 .LASF217
     /tmp/ccaS8p75.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccaS8p75.s:509    .text:0000000000000210 .Letext0
     /tmp/ccaS8p75.s:4284   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccaS8p75.s:4426   .debug_str:000000000000046a .LASF0
     /tmp/ccaS8p75.s:4460   .debug_str:0000000000000557 .LASF1
     /tmp/ccaS8p75.s:4576   .debug_str:000000000000088b .LASF2
     /tmp/ccaS8p75.s:4404   .debug_str:00000000000003cc .LASF3
     /tmp/ccaS8p75.s:4584   .debug_str:00000000000008c7 .LASF4
     /tmp/ccaS8p75.s:4436   .debug_str:00000000000004ac .LASF5
     /tmp/ccaS8p75.s:4304   .debug_str:00000000000000a0 .LASF6
     /tmp/ccaS8p75.s:4534   .debug_str:0000000000000781 .LASF7
     /tmp/ccaS8p75.s:4450   .debug_str:000000000000051a .LASF8
     /tmp/ccaS8p75.s:4402   .debug_str:00000000000003bc .LASF9
     /tmp/ccaS8p75.s:4410   .debug_str:00000000000003ff .LASF10
     /tmp/ccaS8p75.s:4328   .debug_str:0000000000000179 .LASF11
     /tmp/ccaS8p75.s:4396   .debug_str:000000000000039f .LASF12
     /tmp/ccaS8p75.s:4346   .debug_str:00000000000001f8 .LASF13
     /tmp/ccaS8p75.s:4326   .debug_str:0000000000000169 .LASF14
     /tmp/ccaS8p75.s:4622   .debug_str:00000000000009d8 .LASF15
     /tmp/ccaS8p75.s:4376   .debug_str:00000000000002dc .LASF16
     /tmp/ccaS8p75.s:4610   .debug_str:000000000000098b .LASF17
     /tmp/ccaS8p75.s:4694   .debug_str:0000000000000c5e .LASF83
     /tmp/ccaS8p75.s:4562   .debug_str:000000000000082f .LASF21
     /tmp/ccaS8p75.s:4454   .debug_str:0000000000000540 .LASF18
     /tmp/ccaS8p75.s:4384   .debug_str:000000000000032e .LASF19
     /tmp/ccaS8p75.s:4710   .debug_str:0000000000000cb2 .LASF20
     /tmp/ccaS8p75.s:4682   .debug_str:0000000000000c17 .LASF22
     /tmp/ccaS8p75.s:4386   .debug_str:0000000000000337 .LASF23
     /tmp/ccaS8p75.s:4646   .debug_str:0000000000000a59 .LASF24
     /tmp/ccaS8p75.s:4360   .debug_str:0000000000000281 .LASF25
     /tmp/ccaS8p75.s:4434   .debug_str:000000000000049e .LASF150
     /tmp/ccaS8p75.s:4604   .debug_str:0000000000000952 .LASF152
     /tmp/ccaS8p75.s:4594   .debug_str:00000000000008fe .LASF26
     /tmp/ccaS8p75.s:4382   .debug_str:0000000000000313 .LASF28
     /tmp/ccaS8p75.s:4428   .debug_str:0000000000000477 .LASF27
     /tmp/ccaS8p75.s:4704   .debug_str:0000000000000c82 .LASF29
     /tmp/ccaS8p75.s:4414   .debug_str:0000000000000418 .LASF30
     /tmp/ccaS8p75.s:4422   .debug_str:0000000000000442 .LASF31
     /tmp/ccaS8p75.s:4674   .debug_str:0000000000000be7 .LASF32
GAS LISTING /tmp/ccaS8p75.s 			page 22


     /tmp/ccaS8p75.s:4660   .debug_str:0000000000000b99 .LASF34
     /tmp/ccaS8p75.s:4572   .debug_str:0000000000000877 .LASF36
     /tmp/ccaS8p75.s:4518   .debug_str:000000000000070e .LASF38
     /tmp/ccaS8p75.s:4550   .debug_str:00000000000007ed .LASF33
     /tmp/ccaS8p75.s:4556   .debug_str:00000000000007fe .LASF35
     /tmp/ccaS8p75.s:4510   .debug_str:00000000000006cb .LASF37
     /tmp/ccaS8p75.s:4452   .debug_str:000000000000052d .LASF39
     /tmp/ccaS8p75.s:4706   .debug_str:0000000000000c9c .LASF40
     /tmp/ccaS8p75.s:4652   .debug_str:0000000000000b37 .LASF41
     /tmp/ccaS8p75.s:4506   .debug_str:00000000000006be .LASF42
     /tmp/ccaS8p75.s:4516   .debug_str:00000000000006fa .LASF43
     /tmp/ccaS8p75.s:4466   .debug_str:0000000000000577 .LASF44
     /tmp/ccaS8p75.s:4560   .debug_str:000000000000081b .LASF45
     /tmp/ccaS8p75.s:4726   .debug_str:0000000000000d25 .LASF46
     /tmp/ccaS8p75.s:4432   .debug_str:000000000000048a .LASF47
     /tmp/ccaS8p75.s:4618   .debug_str:00000000000009c0 .LASF48
     /tmp/ccaS8p75.s:4588   .debug_str:00000000000008d3 .LASF49
     /tmp/ccaS8p75.s:4590   .debug_str:00000000000008e6 .LASF50
     /tmp/ccaS8p75.s:4334   .debug_str:0000000000000196 .LASF51
     /tmp/ccaS8p75.s:4370   .debug_str:00000000000002c7 .LASF52
     /tmp/ccaS8p75.s:4420   .debug_str:0000000000000430 .LASF53
     /tmp/ccaS8p75.s:4430   .debug_str:0000000000000484 .LASF54
     /tmp/ccaS8p75.s:4364   .debug_str:000000000000029d .LASF55
     /tmp/ccaS8p75.s:4306   .debug_str:00000000000000a7 .LASF56
     /tmp/ccaS8p75.s:4580   .debug_str:00000000000008a3 .LASF57
     /tmp/ccaS8p75.s:4574   .debug_str:0000000000000880 .LASF58
     /tmp/ccaS8p75.s:4720   .debug_str:0000000000000cf2 .LASF59
     /tmp/ccaS8p75.s:4696   .debug_str:0000000000000c64 .LASF60
     /tmp/ccaS8p75.s:4712   .debug_str:0000000000000cbb .LASF61
     /tmp/ccaS8p75.s:4688   .debug_str:0000000000000c34 .LASF62
     /tmp/ccaS8p75.s:4486   .debug_str:0000000000000603 .LASF63
     /tmp/ccaS8p75.s:4666   .debug_str:0000000000000bbf .LASF64
     /tmp/ccaS8p75.s:4408   .debug_str:00000000000003e3 .LASF65
     /tmp/ccaS8p75.s:4592   .debug_str:00000000000008ed .LASF66
     /tmp/ccaS8p75.s:4526   .debug_str:000000000000073e .LASF67
     /tmp/ccaS8p75.s:4702   .debug_str:0000000000000c7d .LASF68
     /tmp/ccaS8p75.s:4524   .debug_str:000000000000072d .LASF69
     /tmp/ccaS8p75.s:4440   .debug_str:00000000000004cb .LASF70
     /tmp/ccaS8p75.s:4620   .debug_str:00000000000009c7 .LASF71
     /tmp/ccaS8p75.s:4538   .debug_str:000000000000079e .LASF72
     /tmp/ccaS8p75.s:4446   .debug_str:00000000000004db .LASF74
     /tmp/ccaS8p75.s:4624   .debug_str:00000000000009e4 .LASF73
     /tmp/ccaS8p75.s:4512   .debug_str:00000000000006d2 .LASF75
     /tmp/ccaS8p75.s:4356   .debug_str:0000000000000260 .LASF76
     /tmp/ccaS8p75.s:4496   .debug_str:000000000000066d .LASF77
     /tmp/ccaS8p75.s:4442   .debug_str:00000000000004d0 .LASF111
     /tmp/ccaS8p75.s:4330   .debug_str:0000000000000188 .LASF78
     /tmp/ccaS8p75.s:4312   .debug_str:00000000000000ea .LASF79
     /tmp/ccaS8p75.s:4458   .debug_str:0000000000000552 .LASF80
     /tmp/ccaS8p75.s:4520   .debug_str:0000000000000723 .LASF81
     /tmp/ccaS8p75.s:4474   .debug_str:000000000000059a .LASF82
     /tmp/ccaS8p75.s:4530   .debug_str:0000000000000765 .LASF84
     /tmp/ccaS8p75.s:4616   .debug_str:00000000000009bb .LASF147
     /tmp/ccaS8p75.s:4314   .debug_str:00000000000000ef .LASF85
     /tmp/ccaS8p75.s:4654   .debug_str:0000000000000b4b .LASF86
     /tmp/ccaS8p75.s:4490   .debug_str:0000000000000624 .LASF87
     /tmp/ccaS8p75.s:4308   .debug_str:00000000000000b2 .LASF89
GAS LISTING /tmp/ccaS8p75.s 			page 23


     /tmp/ccaS8p75.s:4628   .debug_str:0000000000000a02 .LASF88
     /tmp/ccaS8p75.s:4492   .debug_str:000000000000062e .LASF90
     /tmp/ccaS8p75.s:4724   .debug_str:0000000000000d1f .LASF91
     /tmp/ccaS8p75.s:4352   .debug_str:000000000000022c .LASF92
     /tmp/ccaS8p75.s:4294   .debug_str:0000000000000032 .LASF93
     /tmp/ccaS8p75.s:4318   .debug_str:0000000000000100 .LASF94
     /tmp/ccaS8p75.s:4380   .debug_str:000000000000030e .LASF194
     /tmp/ccaS8p75.s:4728   .debug_str:0000000000000d2d .LASF95
     /tmp/ccaS8p75.s:4400   .debug_str:00000000000003b3 .LASF96
     /tmp/ccaS8p75.s:4444   .debug_str:00000000000004d6 .LASF97
     /tmp/ccaS8p75.s:4398   .debug_str:00000000000003ae .LASF98
     /tmp/ccaS8p75.s:4608   .debug_str:000000000000097d .LASF99
     /tmp/ccaS8p75.s:4548   .debug_str:00000000000007e1 .LASF100
     /tmp/ccaS8p75.s:4362   .debug_str:000000000000028d .LASF101
     /tmp/ccaS8p75.s:4582   .debug_str:00000000000008bb .LASF102
     /tmp/ccaS8p75.s:4716   .debug_str:0000000000000cdd .LASF103
     /tmp/ccaS8p75.s:4470   .debug_str:0000000000000587 .LASF104
     /tmp/ccaS8p75.s:4332   .debug_str:000000000000018d .LASF105
     /tmp/ccaS8p75.s:4340   .debug_str:00000000000001c4 .LASF106
     /tmp/ccaS8p75.s:4504   .debug_str:00000000000006b5 .LASF107
     /tmp/ccaS8p75.s:4636   .debug_str:0000000000000a26 .LASF108
     /tmp/ccaS8p75.s:4662   .debug_str:0000000000000bae .LASF109
     /tmp/ccaS8p75.s:4686   .debug_str:0000000000000c2b .LASF110
     /tmp/ccaS8p75.s:4336   .debug_str:00000000000001a9 .LASF112
     /tmp/ccaS8p75.s:4630   .debug_str:0000000000000a0b .LASF115
     /tmp/ccaS8p75.s:4502   .debug_str:000000000000069e .LASF117
     /tmp/ccaS8p75.s:4316   .debug_str:00000000000000f4 .LASF113
     /tmp/ccaS8p75.s:4388   .debug_str:0000000000000343 .LASF114
     /tmp/ccaS8p75.s:4578   .debug_str:0000000000000899 .LASF116
     /tmp/ccaS8p75.s:4322   .debug_str:000000000000013a .LASF118
     /tmp/ccaS8p75.s:4632   .debug_str:0000000000000a16 .LASF119
     /tmp/ccaS8p75.s:4390   .debug_str:000000000000035a .LASF120
     /tmp/ccaS8p75.s:4462   .debug_str:000000000000056a .LASF121
     /tmp/ccaS8p75.s:4570   .debug_str:0000000000000867 .LASF122
     /tmp/ccaS8p75.s:4366   .debug_str:00000000000002af .LASF123
     /tmp/ccaS8p75.s:4338   .debug_str:00000000000001b1 .LASF124
     /tmp/ccaS8p75.s:4644   .debug_str:0000000000000a51 .LASF125
     /tmp/ccaS8p75.s:4650   .debug_str:0000000000000b2a .LASF126
     /tmp/ccaS8p75.s:4480   .debug_str:00000000000005b8 .LASF127
     /tmp/ccaS8p75.s:4522   .debug_str:0000000000000728 .LASF218
     /tmp/ccaS8p75.s:4476   .debug_str:000000000000059f .LASF128
     /tmp/ccaS8p75.s:4392   .debug_str:0000000000000370 .LASF129
     /tmp/ccaS8p75.s:4640   .debug_str:0000000000000a47 .LASF130
     /tmp/ccaS8p75.s:4288   .debug_str:0000000000000008 .LASF131
     /tmp/ccaS8p75.s:4488   .debug_str:0000000000000619 .LASF132
     /tmp/ccaS8p75.s:4638   .debug_str:0000000000000a31 .LASF133
     /tmp/ccaS8p75.s:4676   .debug_str:0000000000000bf0 .LASF219
     /tmp/ccaS8p75.s:4586   .debug_str:00000000000008ce .LASF134
     /tmp/ccaS8p75.s:4302   .debug_str:0000000000000094 .LASF135
     /tmp/ccaS8p75.s:4568   .debug_str:000000000000085a .LASF136
     /tmp/ccaS8p75.s:4600   .debug_str:0000000000000931 .LASF137
     /tmp/ccaS8p75.s:4292   .debug_str:000000000000002d .LASF138
     /tmp/ccaS8p75.s:4718   .debug_str:0000000000000cec .LASF139
     /tmp/ccaS8p75.s:4658   .debug_str:0000000000000b91 .LASF140
     /tmp/ccaS8p75.s:4626   .debug_str:00000000000009f9 .LASF141
     /tmp/ccaS8p75.s:4544   .debug_str:00000000000007d3 .LASF142
     /tmp/ccaS8p75.s:4464   .debug_str:0000000000000570 .LASF143
GAS LISTING /tmp/ccaS8p75.s 			page 24


     /tmp/ccaS8p75.s:4368   .debug_str:00000000000002b8 .LASF144
     /tmp/ccaS8p75.s:4296   .debug_str:0000000000000038 .LASF145
     /tmp/ccaS8p75.s:4350   .debug_str:0000000000000223 .LASF146
     /tmp/ccaS8p75.s:4606   .debug_str:0000000000000971 .LASF148
     /tmp/ccaS8p75.s:4286   .debug_str:0000000000000000 .LASF149
     /tmp/ccaS8p75.s:4354   .debug_str:0000000000000252 .LASF151
     /tmp/ccaS8p75.s:4300   .debug_str:000000000000006c .LASF153
     /tmp/ccaS8p75.s:4546   .debug_str:00000000000007db .LASF154
     /tmp/ccaS8p75.s:4634   .debug_str:0000000000000a21 .LASF155
     /tmp/ccaS8p75.s:4678   .debug_str:0000000000000c07 .LASF220
     /tmp/ccaS8p75.s:4438   .debug_str:00000000000004be .LASF156
     /tmp/ccaS8p75.s:4564   .debug_str:000000000000083a .LASF157
     /tmp/ccaS8p75.s:4394   .debug_str:0000000000000387 .LASF158
     /tmp/ccaS8p75.s:4558   .debug_str:0000000000000811 .LASF159
     /tmp/ccaS8p75.s:4310   .debug_str:00000000000000d3 .LASF160
     /tmp/ccaS8p75.s:4602   .debug_str:0000000000000949 .LASF161
     /tmp/ccaS8p75.s:4484   .debug_str:00000000000005ed .LASF162
     /tmp/ccaS8p75.s:4412   .debug_str:000000000000040d .LASF163
     /tmp/ccaS8p75.s:4690   .debug_str:0000000000000c3e .LASF164
     /tmp/ccaS8p75.s:4540   .debug_str:00000000000007b3 .LASF165
     /tmp/ccaS8p75.s:4324   .debug_str:000000000000014f .LASF166
     /tmp/ccaS8p75.s:4374   .debug_str:00000000000002d6 .LASF175
     /tmp/ccaS8p75.s:4478   .debug_str:00000000000005ab .LASF177
     /tmp/ccaS8p75.s:4416   .debug_str:0000000000000423 .LASF167
     /tmp/ccaS8p75.s:4692   .debug_str:0000000000000c57 .LASF168
     /tmp/ccaS8p75.s:4482   .debug_str:00000000000005df .LASF169
     /tmp/ccaS8p75.s:4536   .debug_str:0000000000000794 .LASF170
     /tmp/ccaS8p75.s:4642   .debug_str:0000000000000a4c .LASF221
     /tmp/ccaS8p75.s:4508   .debug_str:00000000000006c6 .LASF171
     /tmp/ccaS8p75.s:4498   .debug_str:0000000000000691 .LASF172
     /tmp/ccaS8p75.s:4612   .debug_str:00000000000009a1 .LASF173
     /tmp/ccaS8p75.s:4344   .debug_str:00000000000001e1 .LASF174
     /tmp/ccaS8p75.s:4358   .debug_str:0000000000000277 .LASF176
     /tmp/ccaS8p75.s:4566   .debug_str:0000000000000843 .LASF178
     /tmp/ccaS8p75.s:4456   .debug_str:0000000000000549 .LASF179
     /tmp/ccaS8p75.s:4320   .debug_str:000000000000011d .LASF180
     /tmp/ccaS8p75.s:4468   .debug_str:000000000000057f .LASF181
     /tmp/ccaS8p75.s:4378   .debug_str:00000000000002f2 .LASF182
     /tmp/ccaS8p75.s:4532   .debug_str:0000000000000775 .LASF183
     /tmp/ccaS8p75.s:4494   .debug_str:000000000000064f .LASF184
     /tmp/ccaS8p75.s:4730   .debug_str:0000000000000d37 .LASF185
     /tmp/ccaS8p75.s:4348   .debug_str:0000000000000208 .LASF186
     /tmp/ccaS8p75.s:4598   .debug_str:0000000000000926 .LASF187
     /tmp/ccaS8p75.s:4448   .debug_str:00000000000004fd .LASF188
     /tmp/ccaS8p75.s:4528   .debug_str:000000000000075c .LASF189
     /tmp/ccaS8p75.s:4298   .debug_str:0000000000000052 .LASF190
     /tmp/ccaS8p75.s:4500   .debug_str:0000000000000696 .LASF191
     /tmp/ccaS8p75.s:4596   .debug_str:000000000000090c .LASF192
     /tmp/ccaS8p75.s:4372   .debug_str:00000000000002cd .LASF193
     /tmp/ccaS8p75.s:4614   .debug_str:00000000000009b4 .LASF195
     /tmp/ccaS8p75.s:4672   .debug_str:0000000000000bdd .LASF196
     /tmp/ccaS8p75.s:4668   .debug_str:0000000000000bce .LASF197
     /tmp/ccaS8p75.s:4514   .debug_str:00000000000006f4 .LASF198
     /tmp/ccaS8p75.s:4472   .debug_str:0000000000000592 .LASF199
     /tmp/ccaS8p75.s:4542   .debug_str:00000000000007bf .LASF200
     /tmp/ccaS8p75.s:4722   .debug_str:0000000000000d0a .LASF201
     /tmp/ccaS8p75.s:4290   .debug_str:0000000000000017 .LASF202
GAS LISTING /tmp/ccaS8p75.s 			page 25


     /tmp/ccaS8p75.s:4424   .debug_str:000000000000045a .LASF222
     /tmp/ccaS8p75.s:463    .text:00000000000001e8 .LFB42
     /tmp/ccaS8p75.s:507    .text:0000000000000210 .LFE42
     /tmp/ccaS8p75.s:474    .text:00000000000001f4 .LBB28
     /tmp/ccaS8p75.s:486    .text:00000000000001fc .LBE28
     /tmp/ccaS8p75.s:3206   .debug_loc:0000000000000000 .LLST11
     /tmp/ccaS8p75.s:21     .text:0000000000000000 .LFB41
     /tmp/ccaS8p75.s:457    .text:00000000000001e8 .LFE41
     /tmp/ccaS8p75.s:3215   .debug_loc:0000000000000026 .LLST0
     /tmp/ccaS8p75.s:4664   .debug_str:0000000000000bba .LASF203
     /tmp/ccaS8p75.s:3244   .debug_loc:000000000000009b .LLST1
     /tmp/ccaS8p75.s:4552   .debug_str:00000000000007f4 .LASF204
     /tmp/ccaS8p75.s:3460   .debug_loc:00000000000003c9 .LLST2
     /tmp/ccaS8p75.s:4554   .debug_str:00000000000007f9 .LASF205
     /tmp/ccaS8p75.s:3676   .debug_loc:00000000000006f7 .LLST3
     /tmp/ccaS8p75.s:4670   .debug_str:0000000000000bd8 .LASF206
     /tmp/ccaS8p75.s:3892   .debug_loc:0000000000000a25 .LLST4
     /tmp/ccaS8p75.s:4108   .debug_loc:0000000000000d53 .LLST5
     /tmp/ccaS8p75.s:4680   .debug_str:0000000000000c12 .LASF207
     /tmp/ccaS8p75.s:4221   .debug_loc:0000000000000efd .LLST6
     /tmp/ccaS8p75.s:4700   .debug_str:0000000000000c75 .LASF208
     /tmp/ccaS8p75.s:4238   .debug_loc:0000000000000f48 .LLST7
     /tmp/ccaS8p75.s:48     .text:000000000000002c .LBB16
     /tmp/ccaS8p75.s:66     .text:0000000000000038 .LBE16
     /tmp/ccaS8p75.s:68     .text:0000000000000038 .LBB18
     /tmp/ccaS8p75.s:84     .text:0000000000000044 .LBE18
     /tmp/ccaS8p75.s:86     .text:0000000000000044 .LBB20
     /tmp/ccaS8p75.s:102    .text:0000000000000050 .LBE20
     /tmp/ccaS8p75.s:233    .text:00000000000000d4 .LBB22
     /tmp/ccaS8p75.s:244    .text:00000000000000d8 .LBE22
     /tmp/ccaS8p75.s:4249   .debug_loc:0000000000000f7e .LLST8
     /tmp/ccaS8p75.s:249    .text:00000000000000dc .LBB24
     /tmp/ccaS8p75.s:261    .text:00000000000000e0 .LBE24
     /tmp/ccaS8p75.s:4256   .debug_loc:0000000000000fa1 .LLST9
     /tmp/ccaS8p75.s:411    .text:00000000000001a8 .LBB26
     /tmp/ccaS8p75.s:426    .text:00000000000001b4 .LBE26
     /tmp/ccaS8p75.s:4263   .debug_loc:0000000000000fc4 .LLST10
     /tmp/ccaS8p75.s:134    .text:00000000000000a4 .LVL11
     /tmp/ccaS8p75.s:229    .text:00000000000000d4 .LVL15
     /tmp/ccaS8p75.s:284    .text:0000000000000100 .LVL21
     /tmp/ccaS8p75.s:293    .text:000000000000010c .LVL23
     /tmp/ccaS8p75.s:304    .text:000000000000011c .LVL26
     /tmp/ccaS8p75.s:313    .text:0000000000000128 .LVL28
     /tmp/ccaS8p75.s:322    .text:0000000000000134 .LVL30
     /tmp/ccaS8p75.s:331    .text:0000000000000140 .LVL32
     /tmp/ccaS8p75.s:340    .text:000000000000014c .LVL34
     /tmp/ccaS8p75.s:349    .text:0000000000000158 .LVL36
     /tmp/ccaS8p75.s:360    .text:0000000000000168 .LVL39
     /tmp/ccaS8p75.s:369    .text:0000000000000174 .LVL41
     /tmp/ccaS8p75.s:378    .text:0000000000000180 .LVL43
     /tmp/ccaS8p75.s:387    .text:000000000000018c .LVL45
     /tmp/ccaS8p75.s:396    .text:0000000000000198 .LVL47
     /tmp/ccaS8p75.s:405    .text:00000000000001a4 .LVL49
     /tmp/ccaS8p75.s:430    .text:00000000000001bc .LVL52
     /tmp/ccaS8p75.s:439    .text:00000000000001d0 .LVL55
     /tmp/ccaS8p75.s:451    .text:00000000000001e4 .LVL58
     /tmp/ccaS8p75.s:4684   .debug_str:0000000000000c26 .LASF209
GAS LISTING /tmp/ccaS8p75.s 			page 26


     /tmp/ccaS8p75.s:4342   .debug_str:00000000000001ce .LASF210
     /tmp/ccaS8p75.s:4714   .debug_str:0000000000000cd1 .LASF212
     /tmp/ccaS8p75.s:4418   .debug_str:0000000000000429 .LASF211
     /tmp/ccaS8p75.s:4698   .debug_str:0000000000000c6e .LASF213
     /tmp/ccaS8p75.s:4406   .debug_str:00000000000003d3 .LASF214
     /tmp/ccaS8p75.s:473    .text:00000000000001f4 .LVL59
     /tmp/ccaS8p75.s:483    .text:00000000000001fc .LVL60
     /tmp/ccaS8p75.s:25     .text:0000000000000000 .LVL0
     /tmp/ccaS8p75.s:40     .text:0000000000000020 .LVL1
     /tmp/ccaS8p75.s:111    .text:0000000000000060 .LVL9
     /tmp/ccaS8p75.s:139    .text:00000000000000a8 .LVL12
     /tmp/ccaS8p75.s:146    .text:00000000000000b4 .LVL14
     /tmp/ccaS8p75.s:42     .text:0000000000000024 .LVL2
     /tmp/ccaS8p75.s:132    .text:000000000000009c .LVL10
     /tmp/ccaS8p75.s:277    .text:00000000000000f8 .LVL20
     /tmp/ccaS8p75.s:287    .text:0000000000000104 .LVL22
     /tmp/ccaS8p75.s:296    .text:0000000000000110 .LVL24
     /tmp/ccaS8p75.s:302    .text:0000000000000114 .LVL25
     /tmp/ccaS8p75.s:307    .text:0000000000000120 .LVL27
     /tmp/ccaS8p75.s:316    .text:000000000000012c .LVL29
     /tmp/ccaS8p75.s:325    .text:0000000000000138 .LVL31
     /tmp/ccaS8p75.s:334    .text:0000000000000144 .LVL33
     /tmp/ccaS8p75.s:343    .text:0000000000000150 .LVL35
     /tmp/ccaS8p75.s:352    .text:000000000000015c .LVL37
     /tmp/ccaS8p75.s:358    .text:0000000000000160 .LVL38
     /tmp/ccaS8p75.s:363    .text:000000000000016c .LVL40
     /tmp/ccaS8p75.s:372    .text:0000000000000178 .LVL42
     /tmp/ccaS8p75.s:381    .text:0000000000000184 .LVL44
     /tmp/ccaS8p75.s:390    .text:0000000000000190 .LVL46
     /tmp/ccaS8p75.s:399    .text:000000000000019c .LVL48
     /tmp/ccaS8p75.s:408    .text:00000000000001a8 .LVL50
     /tmp/ccaS8p75.s:432    .text:00000000000001c0 .LVL53
     /tmp/ccaS8p75.s:437    .text:00000000000001c8 .LVL54
     /tmp/ccaS8p75.s:444    .text:00000000000001d4 .LVL56
     /tmp/ccaS8p75.s:449    .text:00000000000001dc .LVL57
     /tmp/ccaS8p75.s:44     .text:0000000000000028 .LVL3
     /tmp/ccaS8p75.s:46     .text:000000000000002c .LVL4
     /tmp/ccaS8p75.s:58     .text:0000000000000030 .LVL5
     /tmp/ccaS8p75.s:64     .text:0000000000000038 .LVL6
     /tmp/ccaS8p75.s:143    .text:00000000000000ac .LVL13
     /tmp/ccaS8p75.s:82     .text:0000000000000044 .LVL7
     /tmp/ccaS8p75.s:248    .text:00000000000000dc .LVL17
     /tmp/ccaS8p75.s:257    .text:00000000000000e0 .LVL18
     /tmp/ccaS8p75.s:100    .text:0000000000000050 .LVL8
     /tmp/ccaS8p75.s:273    .text:00000000000000f0 .LVL19
     /tmp/ccaS8p75.s:241    .text:00000000000000d8 .LVL16
     /tmp/ccaS8p75.s:423    .text:00000000000001b4 .LVL51
     /tmp/ccaS8p75.s:519    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11printStringPKc
_ZN15MemoryAllocator9mem_allocEm
_ZN15MemoryAllocator8mem_freeEPv
__getc
__putc
_ZN3TCB12createThreadEPPS_PFvPvES2_S2_
_ZN3TCB11thread_exitEv
GAS LISTING /tmp/ccaS8p75.s 			page 27


_ZN3TCB8dispatchEv
_ZN3TCB4joinEv
_ZN3TCB10waitForAllEv
_ZN3TCB12setMaxThreadEi
_ZN4_sem8sem_openEPPS_l
_ZN4_sem9sem_closeEPS_
_ZN4_sem8sem_waitEPS_
_ZN4_sem10sem_signalEPS_
_ZN4_sem11sem_trywaitEPS_
console_handler
