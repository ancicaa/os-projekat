GAS LISTING /tmp/ccsY7LQ2.s 			page 1


   1              		.file	"syscall_c.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z7syscallmmmmm
   9              	_Z7syscallmmmmm:
  10              	.LFB18:
  11              		.file 1 "src/syscall_c.cpp"
   1:src/syscall_c.cpp **** #include "../h/syscall_c.hpp"
   2:src/syscall_c.cpp **** #include "../h/riscv.hpp"
   3:src/syscall_c.cpp **** 
   4:src/syscall_c.cpp **** 
   5:src/syscall_c.cpp **** uint64 syscall(uint64 code, uint64 arg = 0, uint64 arg2 = 0, uint64 arg3 = 0, uint64 arg4 = 0) {
  12              		.loc 1 5 96
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FE 		addi	sp,sp,-32
  16              		.cfi_def_cfa_offset 32
  17 0004 233C8100 		sd	s0,24(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040102 		addi	s0,sp,32
  20              		.cfi_def_cfa 8, 0
   6:src/syscall_c.cpp ****     __asm__ volatile ("ecall");
  21              		.loc 1 6 5
  22              		.loc 1 6 31 is_stmt 0
  23              	#APP
  24              	# 6 "src/syscall_c.cpp" 1
   7              	    return Riscv::r_a0();
  25              		ecall
  26              	# 0 "" 2
  27              		.loc 1 7 5 is_stmt 1
  28              	#NO_APP
  29              	.LBB4:
  30              	.LBB5:
  31              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef RISCV_HPP
   2:src/../h/riscv.hpp **** #define RISCV_HPP
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** 
   6:src/../h/riscv.hpp **** class Riscv{
   7:src/../h/riscv.hpp **** 
   8:src/../h/riscv.hpp ****     static void obradaprekida(uint64 code, uint64 arg1, uint64 arg2, uint64 arg3, uint64 arg4);
   9:src/../h/riscv.hpp **** public:
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  12:src/../h/riscv.hpp ****     static void popSppSpie();
  13:src/../h/riscv.hpp **** 
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read register sepc
GAS LISTING /tmp/ccsY7LQ2.s 			page 2


  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read register stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read register stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip
  39:src/../h/riscv.hpp ****     {
  40:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  41:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  42:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  43:src/../h/riscv.hpp ****     };
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     // mask set register sip
  46:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     // mask clear register sip
  49:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  50:src/../h/riscv.hpp **** 
  51:src/../h/riscv.hpp ****     // read register sip
  52:src/../h/riscv.hpp ****     static uint64 r_sip();
  53:src/../h/riscv.hpp **** 
  54:src/../h/riscv.hpp ****     // write register sip
  55:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  56:src/../h/riscv.hpp **** 
  57:src/../h/riscv.hpp ****     enum BitMaskSstatus
  58:src/../h/riscv.hpp ****     {
  59:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  60:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  61:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  62:src/../h/riscv.hpp ****     };
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // mask set register sstatus
  65:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // mask clear register sstatus
  68:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     // read register sstatus
  71:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  72:src/../h/riscv.hpp **** 
  73:src/../h/riscv.hpp ****     // write register sstatus
  74:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp ****     // supervisor trap
  77:src/../h/riscv.hpp ****     static void supervisorTrap();
GAS LISTING /tmp/ccsY7LQ2.s 			page 3


  78:src/../h/riscv.hpp **** 
  79:src/../h/riscv.hpp ****     //stvec Vector "table"
  80:src/../h/riscv.hpp ****     static void stvecVectorTable();
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp ****     //read a0 register
  83:src/../h/riscv.hpp ****     static uint64 r_a0();
  84:src/../h/riscv.hpp **** 
  85:src/../h/riscv.hpp ****     //write to a0 register
  86:src/../h/riscv.hpp ****     static void w_a0(uint64 writeValue);
  87:src/../h/riscv.hpp **** 
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** private:
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp ****     // supervisor trap handler
  92:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  93:src/../h/riscv.hpp **** 
  94:src/../h/riscv.hpp ****     static void handleTimerInterrupt();
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp ****     static void handleConsoleInterrupt();
  97:src/../h/riscv.hpp **** };
  98:src/../h/riscv.hpp **** 
  99:src/../h/riscv.hpp **** 
 100:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause()
 101:src/../h/riscv.hpp **** {
 102:src/../h/riscv.hpp ****     uint64 volatile scause;
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
 104:src/../h/riscv.hpp ****     return scause;
 105:src/../h/riscv.hpp **** }
 106:src/../h/riscv.hpp **** 
 107:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause)
 108:src/../h/riscv.hpp **** {
 109:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc()
 113:src/../h/riscv.hpp **** {
 114:src/../h/riscv.hpp ****     uint64 volatile sepc;
 115:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 116:src/../h/riscv.hpp ****     return sepc;
 117:src/../h/riscv.hpp **** }
 118:src/../h/riscv.hpp **** 
 119:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc)
 120:src/../h/riscv.hpp **** {
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec()
 125:src/../h/riscv.hpp **** {
 126:src/../h/riscv.hpp ****     uint64 volatile stvec;
 127:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 128:src/../h/riscv.hpp ****     return stvec;
 129:src/../h/riscv.hpp **** }
 130:src/../h/riscv.hpp **** 
 131:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec)
 132:src/../h/riscv.hpp **** {
 133:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 134:src/../h/riscv.hpp **** }
GAS LISTING /tmp/ccsY7LQ2.s 			page 4


 135:src/../h/riscv.hpp **** 
 136:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval()
 137:src/../h/riscv.hpp **** {
 138:src/../h/riscv.hpp ****     uint64 volatile stval;
 139:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 140:src/../h/riscv.hpp ****     return stval;
 141:src/../h/riscv.hpp **** }
 142:src/../h/riscv.hpp **** 
 143:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval)
 144:src/../h/riscv.hpp **** {
 145:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 146:src/../h/riscv.hpp **** }
 147:src/../h/riscv.hpp **** 
 148:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask)
 149:src/../h/riscv.hpp **** {
 150:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 151:src/../h/riscv.hpp **** }
 152:src/../h/riscv.hpp **** 
 153:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask)
 154:src/../h/riscv.hpp **** {
 155:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 156:src/../h/riscv.hpp **** }
 157:src/../h/riscv.hpp **** 
 158:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip()
 159:src/../h/riscv.hpp **** {
 160:src/../h/riscv.hpp ****     uint64 volatile sip;
 161:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 162:src/../h/riscv.hpp ****     return sip;
 163:src/../h/riscv.hpp **** }
 164:src/../h/riscv.hpp **** 
 165:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip)
 166:src/../h/riscv.hpp **** {
 167:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 168:src/../h/riscv.hpp **** }
 169:src/../h/riscv.hpp **** 
 170:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask)
 171:src/../h/riscv.hpp **** {
 172:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 173:src/../h/riscv.hpp **** }
 174:src/../h/riscv.hpp **** 
 175:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask)
 176:src/../h/riscv.hpp **** {
 177:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 178:src/../h/riscv.hpp **** }
 179:src/../h/riscv.hpp **** 
 180:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus()
 181:src/../h/riscv.hpp **** {
 182:src/../h/riscv.hpp ****     uint64 volatile sstatus;
 183:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 184:src/../h/riscv.hpp ****     return sstatus;
 185:src/../h/riscv.hpp **** }
 186:src/../h/riscv.hpp **** 
 187:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus)
 188:src/../h/riscv.hpp **** {
 189:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 190:src/../h/riscv.hpp **** }
 191:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccsY7LQ2.s 			page 5


 192:src/../h/riscv.hpp **** //a0
 193:src/../h/riscv.hpp **** inline uint64 Riscv::r_a0()
 194:src/../h/riscv.hpp **** {
 195:src/../h/riscv.hpp ****     uint64 volatile a0;
  32              		.loc 2 195 5
 196:src/../h/riscv.hpp ****     __asm__ volatile ("mv %0, a0" : "=r"(a0));
  33              		.loc 2 196 5
  34              		.loc 2 196 46 is_stmt 0
  35              	#APP
  36              	# 196 "src/../h/riscv.hpp" 1
 197              	    return a0;
  37              		mv a5, a0
  38              	# 0 "" 2
  39              	#NO_APP
  40 0014 2334F4FE 		sd	a5,-24(s0)
  41              		.loc 2 197 5 is_stmt 1
  42              		.loc 2 197 12 is_stmt 0
  43 0018 033584FE 		ld	a0,-24(s0)
  44              	.LVL1:
  45              	.LBE5:
  46              	.LBE4:
   8:src/syscall_c.cpp **** }
  47              		.loc 1 8 1
  48 001c 03348101 		ld	s0,24(sp)
  49              		.cfi_restore 8
  50              		.cfi_def_cfa 2, 32
  51 0020 13010102 		addi	sp,sp,32
  52              		.cfi_def_cfa_offset 0
  53 0024 67800000 		jr	ra
  54              		.cfi_endproc
  55              	.LFE18:
  57              		.align	2
  58              		.globl	_Z9mem_allocm
  60              	_Z9mem_allocm:
  61              	.LFB19:
   9:src/syscall_c.cpp **** 
  10:src/syscall_c.cpp **** void *mem_alloc(size_t size) {
  62              		.loc 1 10 30 is_stmt 1
  63              		.cfi_startproc
  64              	.LVL2:
  65 0028 130101FF 		addi	sp,sp,-16
  66              		.cfi_def_cfa_offset 16
  67 002c 23341100 		sd	ra,8(sp)
  68 0030 23308100 		sd	s0,0(sp)
  69              		.cfi_offset 1, -8
  70              		.cfi_offset 8, -16
  71 0034 13040101 		addi	s0,sp,16
  72              		.cfi_def_cfa 8, 0
  11:src/syscall_c.cpp ****     int blocks = (size - 1) / MEM_BLOCK_SIZE + 1;
  73              		.loc 1 11 5
  74              		.loc 1 11 24 is_stmt 0
  75 0038 9305F5FF 		addi	a1,a0,-1
  76              		.loc 1 11 29
  77 003c 93D56500 		srli	a1,a1,6
  78              	.LVL3:
  12:src/syscall_c.cpp ****     return (void *) syscall(MEM_ALLOC, blocks);
  79              		.loc 1 12 5 is_stmt 1
GAS LISTING /tmp/ccsY7LQ2.s 			page 6


  80              		.loc 1 12 28 is_stmt 0
  81 0040 13070000 		li	a4,0
  82 0044 93060000 		li	a3,0
  83 0048 13060000 		li	a2,0
  84 004c 9B851500 		addiw	a1,a1,1
  85              	.LVL4:
  86 0050 13051000 		li	a0,1
  87              	.LVL5:
  88 0054 97000000 		call	_Z7syscallmmmmm
  88      E7800000 
  89              	.LVL6:
  13:src/syscall_c.cpp **** }
  90              		.loc 1 13 1
  91 005c 83308100 		ld	ra,8(sp)
  92              		.cfi_restore 1
  93 0060 03340100 		ld	s0,0(sp)
  94              		.cfi_restore 8
  95              		.cfi_def_cfa 2, 16
  96 0064 13010101 		addi	sp,sp,16
  97              		.cfi_def_cfa_offset 0
  98 0068 67800000 		jr	ra
  99              		.cfi_endproc
 100              	.LFE19:
 102              		.align	2
 103              		.globl	_Z8mem_freePv
 105              	_Z8mem_freePv:
 106              	.LFB20:
  14:src/syscall_c.cpp **** 
  15:src/syscall_c.cpp **** int mem_free(void *ptr) {
 107              		.loc 1 15 25 is_stmt 1
 108              		.cfi_startproc
 109              	.LVL7:
 110 006c 130101FF 		addi	sp,sp,-16
 111              		.cfi_def_cfa_offset 16
 112 0070 23341100 		sd	ra,8(sp)
 113 0074 23308100 		sd	s0,0(sp)
 114              		.cfi_offset 1, -8
 115              		.cfi_offset 8, -16
 116 0078 13040101 		addi	s0,sp,16
 117              		.cfi_def_cfa 8, 0
 118 007c 93050500 		mv	a1,a0
  16:src/syscall_c.cpp ****     return syscall(MEM_FREE, (uint64)ptr);
 119              		.loc 1 16 5
 120              		.loc 1 16 19 is_stmt 0
 121 0080 13070000 		li	a4,0
 122 0084 93060000 		li	a3,0
 123 0088 13060000 		li	a2,0
 124 008c 13052000 		li	a0,2
 125              	.LVL8:
 126 0090 97000000 		call	_Z7syscallmmmmm
 126      E7800000 
 127              	.LVL9:
  17:src/syscall_c.cpp **** }
 128              		.loc 1 17 1
 129 0098 1B050500 		sext.w	a0,a0
 130 009c 83308100 		ld	ra,8(sp)
 131              		.cfi_restore 1
GAS LISTING /tmp/ccsY7LQ2.s 			page 7


 132 00a0 03340100 		ld	s0,0(sp)
 133              		.cfi_restore 8
 134              		.cfi_def_cfa 2, 16
 135 00a4 13010101 		addi	sp,sp,16
 136              		.cfi_def_cfa_offset 0
 137 00a8 67800000 		jr	ra
 138              		.cfi_endproc
 139              	.LFE20:
 141              		.align	2
 142              		.globl	_Z4getcv
 144              	_Z4getcv:
 145              	.LFB21:
  18:src/syscall_c.cpp **** 
  19:src/syscall_c.cpp **** char getc () {
 146              		.loc 1 19 14 is_stmt 1
 147              		.cfi_startproc
 148 00ac 130101FF 		addi	sp,sp,-16
 149              		.cfi_def_cfa_offset 16
 150 00b0 23341100 		sd	ra,8(sp)
 151 00b4 23308100 		sd	s0,0(sp)
 152              		.cfi_offset 1, -8
 153              		.cfi_offset 8, -16
 154 00b8 13040101 		addi	s0,sp,16
 155              		.cfi_def_cfa 8, 0
  20:src/syscall_c.cpp ****     return syscall(GETC);
 156              		.loc 1 20 5
 157              		.loc 1 20 19 is_stmt 0
 158 00bc 13070000 		li	a4,0
 159 00c0 93060000 		li	a3,0
 160 00c4 13060000 		li	a2,0
 161 00c8 93050000 		li	a1,0
 162 00cc 13051004 		li	a0,65
 163 00d0 97000000 		call	_Z7syscallmmmmm
 163      E7800000 
 164              	.LVL10:
  21:src/syscall_c.cpp **** }
 165              		.loc 1 21 1
 166 00d8 1375F50F 		andi	a0,a0,0xff
 167 00dc 83308100 		ld	ra,8(sp)
 168              		.cfi_restore 1
 169 00e0 03340100 		ld	s0,0(sp)
 170              		.cfi_restore 8
 171              		.cfi_def_cfa 2, 16
 172 00e4 13010101 		addi	sp,sp,16
 173              		.cfi_def_cfa_offset 0
 174 00e8 67800000 		jr	ra
 175              		.cfi_endproc
 176              	.LFE21:
 178              		.align	2
 179              		.globl	_Z4putcc
 181              	_Z4putcc:
 182              	.LFB22:
  22:src/syscall_c.cpp **** 
  23:src/syscall_c.cpp **** void putc (char c) {
 183              		.loc 1 23 20 is_stmt 1
 184              		.cfi_startproc
 185              	.LVL11:
GAS LISTING /tmp/ccsY7LQ2.s 			page 8


 186 00ec 130101FF 		addi	sp,sp,-16
 187              		.cfi_def_cfa_offset 16
 188 00f0 23341100 		sd	ra,8(sp)
 189 00f4 23308100 		sd	s0,0(sp)
 190              		.cfi_offset 1, -8
 191              		.cfi_offset 8, -16
 192 00f8 13040101 		addi	s0,sp,16
 193              		.cfi_def_cfa 8, 0
 194 00fc 93050500 		mv	a1,a0
  24:src/syscall_c.cpp ****     syscall(PUTC, c);
 195              		.loc 1 24 5
 196              		.loc 1 24 12 is_stmt 0
 197 0100 13070000 		li	a4,0
 198 0104 93060000 		li	a3,0
 199 0108 13060000 		li	a2,0
 200 010c 13052004 		li	a0,66
 201              	.LVL12:
 202 0110 97000000 		call	_Z7syscallmmmmm
 202      E7800000 
 203              	.LVL13:
  25:src/syscall_c.cpp **** }...
 204              		.loc 1 25 1
 205 0118 83308100 		ld	ra,8(sp)
 206              		.cfi_restore 1
 207 011c 03340100 		ld	s0,0(sp)
 208              		.cfi_restore 8
 209              		.cfi_def_cfa 2, 16
 210 0120 13010101 		addi	sp,sp,16
 211              		.cfi_def_cfa_offset 0
 212 0124 67800000 		jr	ra
 213              		.cfi_endproc
 214              	.LFE22:
 216              	.Letext0:
 217              		.file 3 "src/../h/../lib/hw.h"
 218              		.file 4 "src/../h/syscall_c.hpp"
GAS LISTING /tmp/ccsY7LQ2.s 			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscall_c.cpp
     /tmp/ccsY7LQ2.s:9      .text:0000000000000000 _Z7syscallmmmmm
     /tmp/ccsY7LQ2.s:13     .text:0000000000000000 .L0 
     /tmp/ccsY7LQ2.s:15     .text:0000000000000000 .L0 
     /tmp/ccsY7LQ2.s:16     .text:0000000000000004 .L0 
     /tmp/ccsY7LQ2.s:18     .text:0000000000000008 .L0 
     /tmp/ccsY7LQ2.s:20     .text:000000000000000c .L0 
     /tmp/ccsY7LQ2.s:22     .text:000000000000000c .L0 
   src/syscall_c.cpp:6      .text:000000000000000c .L0 
     /tmp/ccsY7LQ2.s:32     .text:0000000000000010 .L0 
     /tmp/ccsY7LQ2.s:33     .text:0000000000000010 .L0 
     /tmp/ccsY7LQ2.s:34     .text:0000000000000010 .L0 
  src/../h/riscv.hpp:196    .text:0000000000000010 .L0 
     /tmp/ccsY7LQ2.s:42     .text:0000000000000018 .L0 
     /tmp/ccsY7LQ2.s:43     .text:0000000000000018 .L0 
     /tmp/ccsY7LQ2.s:48     .text:000000000000001c .L0 
     /tmp/ccsY7LQ2.s:49     .text:0000000000000020 .L0 
     /tmp/ccsY7LQ2.s:50     .text:0000000000000020 .L0 
     /tmp/ccsY7LQ2.s:52     .text:0000000000000024 .L0 
     /tmp/ccsY7LQ2.s:54     .text:0000000000000028 .L0 
     /tmp/ccsY7LQ2.s:60     .text:0000000000000028 _Z9mem_allocm
     /tmp/ccsY7LQ2.s:63     .text:0000000000000028 .L0 
     /tmp/ccsY7LQ2.s:65     .text:0000000000000028 .L0 
     /tmp/ccsY7LQ2.s:66     .text:000000000000002c .L0 
     /tmp/ccsY7LQ2.s:69     .text:0000000000000034 .L0 
     /tmp/ccsY7LQ2.s:70     .text:0000000000000034 .L0 
     /tmp/ccsY7LQ2.s:72     .text:0000000000000038 .L0 
     /tmp/ccsY7LQ2.s:74     .text:0000000000000038 .L0 
     /tmp/ccsY7LQ2.s:75     .text:0000000000000038 .L0 
     /tmp/ccsY7LQ2.s:77     .text:000000000000003c .L0 
     /tmp/ccsY7LQ2.s:80     .text:0000000000000040 .L0 
     /tmp/ccsY7LQ2.s:81     .text:0000000000000040 .L0 
     /tmp/ccsY7LQ2.s:91     .text:000000000000005c .L0 
     /tmp/ccsY7LQ2.s:92     .text:0000000000000060 .L0 
     /tmp/ccsY7LQ2.s:94     .text:0000000000000064 .L0 
     /tmp/ccsY7LQ2.s:95     .text:0000000000000064 .L0 
     /tmp/ccsY7LQ2.s:97     .text:0000000000000068 .L0 
     /tmp/ccsY7LQ2.s:99     .text:000000000000006c .L0 
     /tmp/ccsY7LQ2.s:105    .text:000000000000006c _Z8mem_freePv
     /tmp/ccsY7LQ2.s:108    .text:000000000000006c .L0 
     /tmp/ccsY7LQ2.s:110    .text:000000000000006c .L0 
     /tmp/ccsY7LQ2.s:111    .text:0000000000000070 .L0 
     /tmp/ccsY7LQ2.s:114    .text:0000000000000078 .L0 
     /tmp/ccsY7LQ2.s:115    .text:0000000000000078 .L0 
     /tmp/ccsY7LQ2.s:117    .text:000000000000007c .L0 
     /tmp/ccsY7LQ2.s:120    .text:0000000000000080 .L0 
     /tmp/ccsY7LQ2.s:121    .text:0000000000000080 .L0 
     /tmp/ccsY7LQ2.s:129    .text:0000000000000098 .L0 
     /tmp/ccsY7LQ2.s:131    .text:00000000000000a0 .L0 
     /tmp/ccsY7LQ2.s:133    .text:00000000000000a4 .L0 
     /tmp/ccsY7LQ2.s:134    .text:00000000000000a4 .L0 
     /tmp/ccsY7LQ2.s:136    .text:00000000000000a8 .L0 
     /tmp/ccsY7LQ2.s:138    .text:00000000000000ac .L0 
     /tmp/ccsY7LQ2.s:144    .text:00000000000000ac _Z4getcv
     /tmp/ccsY7LQ2.s:147    .text:00000000000000ac .L0 
     /tmp/ccsY7LQ2.s:148    .text:00000000000000ac .L0 
GAS LISTING /tmp/ccsY7LQ2.s 			page 10


     /tmp/ccsY7LQ2.s:149    .text:00000000000000b0 .L0 
     /tmp/ccsY7LQ2.s:152    .text:00000000000000b8 .L0 
     /tmp/ccsY7LQ2.s:153    .text:00000000000000b8 .L0 
     /tmp/ccsY7LQ2.s:155    .text:00000000000000bc .L0 
     /tmp/ccsY7LQ2.s:157    .text:00000000000000bc .L0 
     /tmp/ccsY7LQ2.s:158    .text:00000000000000bc .L0 
     /tmp/ccsY7LQ2.s:166    .text:00000000000000d8 .L0 
     /tmp/ccsY7LQ2.s:168    .text:00000000000000e0 .L0 
     /tmp/ccsY7LQ2.s:170    .text:00000000000000e4 .L0 
     /tmp/ccsY7LQ2.s:171    .text:00000000000000e4 .L0 
     /tmp/ccsY7LQ2.s:173    .text:00000000000000e8 .L0 
     /tmp/ccsY7LQ2.s:175    .text:00000000000000ec .L0 
     /tmp/ccsY7LQ2.s:181    .text:00000000000000ec _Z4putcc
     /tmp/ccsY7LQ2.s:184    .text:00000000000000ec .L0 
     /tmp/ccsY7LQ2.s:186    .text:00000000000000ec .L0 
     /tmp/ccsY7LQ2.s:187    .text:00000000000000f0 .L0 
     /tmp/ccsY7LQ2.s:190    .text:00000000000000f8 .L0 
     /tmp/ccsY7LQ2.s:191    .text:00000000000000f8 .L0 
     /tmp/ccsY7LQ2.s:193    .text:00000000000000fc .L0 
     /tmp/ccsY7LQ2.s:196    .text:0000000000000100 .L0 
     /tmp/ccsY7LQ2.s:197    .text:0000000000000100 .L0 
     /tmp/ccsY7LQ2.s:205    .text:0000000000000118 .L0 
     /tmp/ccsY7LQ2.s:206    .text:000000000000011c .L0 
     /tmp/ccsY7LQ2.s:208    .text:0000000000000120 .L0 
     /tmp/ccsY7LQ2.s:209    .text:0000000000000120 .L0 
     /tmp/ccsY7LQ2.s:211    .text:0000000000000124 .L0 
     /tmp/ccsY7LQ2.s:213    .text:0000000000000128 .L0 
     /tmp/ccsY7LQ2.s:219    .text:0000000000000128 .L0 
     /tmp/ccsY7LQ2.s:904    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccsY7LQ2.s:1689   .debug_str:0000000000000474 .LASF84
     /tmp/ccsY7LQ2.s:1605   .debug_str:00000000000001eb .LASF85
     /tmp/ccsY7LQ2.s:1611   .debug_str:000000000000022a .LASF86
     /tmp/ccsY7LQ2.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccsY7LQ2.s:216    .text:0000000000000128 .Letext0
     /tmp/ccsY7LQ2.s:1531   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccsY7LQ2.s:1627   .debug_str:00000000000002bb .LASF0
     /tmp/ccsY7LQ2.s:1637   .debug_str:00000000000002e2 .LASF1
     /tmp/ccsY7LQ2.s:1617   .debug_str:000000000000027a .LASF2
     /tmp/ccsY7LQ2.s:1603   .debug_str:00000000000001e4 .LASF4
     /tmp/ccsY7LQ2.s:1665   .debug_str:00000000000003c8 .LASF3
     /tmp/ccsY7LQ2.s:1549   .debug_str:0000000000000065 .LASF5
     /tmp/ccsY7LQ2.s:1641   .debug_str:000000000000030a .LASF6
     /tmp/ccsY7LQ2.s:1625   .debug_str:00000000000002a8 .LASF7
     /tmp/ccsY7LQ2.s:1697   .debug_str:000000000000056c .LASF8
     /tmp/ccsY7LQ2.s:1595   .debug_str:0000000000000196 .LASF9
     /tmp/ccsY7LQ2.s:1649   .debug_str:0000000000000352 .LASF10
     /tmp/ccsY7LQ2.s:1691   .debug_str:0000000000000538 .LASF11
     /tmp/ccsY7LQ2.s:1553   .debug_str:0000000000000071 .LASF12
     /tmp/ccsY7LQ2.s:1535   .debug_str:0000000000000008 .LASF13
     /tmp/ccsY7LQ2.s:1563   .debug_str:00000000000000cb .LASF14
     /tmp/ccsY7LQ2.s:1659   .debug_str:0000000000000391 .LASF15
     /tmp/ccsY7LQ2.s:1567   .debug_str:00000000000000e0 .LASF16
     /tmp/ccsY7LQ2.s:1631   .debug_str:00000000000002cf .LASF80
     /tmp/ccsY7LQ2.s:1673   .debug_str:00000000000003f5 .LASF17
     /tmp/ccsY7LQ2.s:1655   .debug_str:000000000000037d .LASF18
     /tmp/ccsY7LQ2.s:1547   .debug_str:0000000000000060 .LASF19
     /tmp/ccsY7LQ2.s:1575   .debug_str:0000000000000130 .LASF20
GAS LISTING /tmp/ccsY7LQ2.s 			page 11


     /tmp/ccsY7LQ2.s:1635   .debug_str:00000000000002dc .LASF87
     /tmp/ccsY7LQ2.s:1539   .debug_str:0000000000000021 .LASF88
     /tmp/ccsY7LQ2.s:1613   .debug_str:0000000000000256 .LASF89
     /tmp/ccsY7LQ2.s:1657   .debug_str:0000000000000386 .LASF53
     /tmp/ccsY7LQ2.s:1709   .debug_str:00000000000005c1 .LASF55
     /tmp/ccsY7LQ2.s:1537   .debug_str:0000000000000018 .LASF21
     /tmp/ccsY7LQ2.s:1677   .debug_str:0000000000000416 .LASF23
     /tmp/ccsY7LQ2.s:1565   .debug_str:00000000000000d7 .LASF25
     /tmp/ccsY7LQ2.s:1573   .debug_str:000000000000011b .LASF27
     /tmp/ccsY7LQ2.s:1669   .debug_str:00000000000003df .LASF22
     /tmp/ccsY7LQ2.s:1653   .debug_str:000000000000036a .LASF24
     /tmp/ccsY7LQ2.s:1687   .debug_str:000000000000046d .LASF26
     /tmp/ccsY7LQ2.s:1681   .debug_str:0000000000000443 .LASF28
     /tmp/ccsY7LQ2.s:1587   .debug_str:000000000000017e .LASF29
     /tmp/ccsY7LQ2.s:1569   .debug_str:00000000000000f6 .LASF30
     /tmp/ccsY7LQ2.s:1533   .debug_str:0000000000000000 .LASF31
     /tmp/ccsY7LQ2.s:1599   .debug_str:00000000000001ba .LASF32
     /tmp/ccsY7LQ2.s:1579   .debug_str:0000000000000146 .LASF33
     /tmp/ccsY7LQ2.s:1555   .debug_str:0000000000000081 .LASF34
     /tmp/ccsY7LQ2.s:1713   .debug_str:00000000000005e4 .LASF35
     /tmp/ccsY7LQ2.s:1581   .debug_str:000000000000014e .LASF36
     /tmp/ccsY7LQ2.s:1629   .debug_str:00000000000002c8 .LASF37
     /tmp/ccsY7LQ2.s:1707   .debug_str:00000000000005ae .LASF38
     /tmp/ccsY7LQ2.s:1545   .debug_str:0000000000000059 .LASF39
     /tmp/ccsY7LQ2.s:1585   .debug_str:000000000000016b .LASF40
     /tmp/ccsY7LQ2.s:1593   .debug_str:0000000000000190 .LASF41
     /tmp/ccsY7LQ2.s:1685   .debug_str:000000000000045b .LASF42
     /tmp/ccsY7LQ2.s:1543   .debug_str:0000000000000053 .LASF43
     /tmp/ccsY7LQ2.s:1715   .debug_str:00000000000005ec .LASF44
     /tmp/ccsY7LQ2.s:1711   .debug_str:00000000000005d9 .LASF45
     /tmp/ccsY7LQ2.s:1661   .debug_str:00000000000003a7 .LASF46
     /tmp/ccsY7LQ2.s:1607   .debug_str:00000000000001fd .LASF47
     /tmp/ccsY7LQ2.s:1679   .debug_str:000000000000042b .LASF48
     /tmp/ccsY7LQ2.s:1561   .debug_str:00000000000000c1 .LASF49
     /tmp/ccsY7LQ2.s:1601   .debug_str:00000000000001ce .LASF50
     /tmp/ccsY7LQ2.s:1619   .debug_str:0000000000000288 .LASF51
     /tmp/ccsY7LQ2.s:1597   .debug_str:00000000000001a4 .LASF52
     /tmp/ccsY7LQ2.s:1671   .debug_str:00000000000003e6 .LASF54
     /tmp/ccsY7LQ2.s:1557   .debug_str:0000000000000095 .LASF56
     /tmp/ccsY7LQ2.s:1571   .debug_str:000000000000010a .LASF57
     /tmp/ccsY7LQ2.s:1695   .debug_str:000000000000054e .LASF58
     /tmp/ccsY7LQ2.s:1683   .debug_str:0000000000000456 .LASF59
     /tmp/ccsY7LQ2.s:1577   .debug_str:0000000000000135 .LASF60
     /tmp/ccsY7LQ2.s:1551   .debug_str:000000000000006c .LASF61
     /tmp/ccsY7LQ2.s:1621   .debug_str:0000000000000292 .LASF62
     /tmp/ccsY7LQ2.s:1701   .debug_str:0000000000000586 .LASF63
     /tmp/ccsY7LQ2.s:1609   .debug_str:0000000000000208 .LASF65
     /tmp/ccsY7LQ2.s:1639   .debug_str:00000000000002f5 .LASF64
     /tmp/ccsY7LQ2.s:1645   .debug_str:0000000000000322 .LASF66
     /tmp/ccsY7LQ2.s:1675   .debug_str:00000000000003ff .LASF67
     /tmp/ccsY7LQ2.s:1541   .debug_str:000000000000002f .LASF68
     /tmp/ccsY7LQ2.s:1667   .debug_str:00000000000003da .LASF90
     /tmp/ccsY7LQ2.s:1583   .debug_str:0000000000000162 .LASF91
     /tmp/ccsY7LQ2.s:182    .text:00000000000000ec .LFB22
     /tmp/ccsY7LQ2.s:214    .text:0000000000000128 .LFE22
     /tmp/ccsY7LQ2.s:1426   .debug_loc:0000000000000000 .LLST4
     /tmp/ccsY7LQ2.s:203    .text:0000000000000118 .LVL13
GAS LISTING /tmp/ccsY7LQ2.s 			page 12


     /tmp/ccsY7LQ2.s:1643   .debug_str:000000000000031d .LASF69
     /tmp/ccsY7LQ2.s:1615   .debug_str:0000000000000275 .LASF70
     /tmp/ccsY7LQ2.s:1663   .debug_str:00000000000003bf .LASF72
     /tmp/ccsY7LQ2.s:145    .text:00000000000000ac .LFB21
     /tmp/ccsY7LQ2.s:176    .text:00000000000000ec .LFE21
     /tmp/ccsY7LQ2.s:164    .text:00000000000000d8 .LVL10
     /tmp/ccsY7LQ2.s:1651   .debug_str:0000000000000361 .LASF71
     /tmp/ccsY7LQ2.s:1647   .debug_str:0000000000000344 .LASF73
     /tmp/ccsY7LQ2.s:106    .text:000000000000006c .LFB20
     /tmp/ccsY7LQ2.s:139    .text:00000000000000ac .LFE20
     /tmp/ccsY7LQ2.s:1440   .debug_loc:0000000000000039 .LLST3
     /tmp/ccsY7LQ2.s:127    .text:0000000000000098 .LVL9
     /tmp/ccsY7LQ2.s:1699   .debug_str:000000000000057c .LASF74
     /tmp/ccsY7LQ2.s:1703   .debug_str:000000000000059b .LASF75
     /tmp/ccsY7LQ2.s:61     .text:0000000000000028 .LFB19
     /tmp/ccsY7LQ2.s:100    .text:000000000000006c .LFE19
     /tmp/ccsY7LQ2.s:1623   .debug_str:00000000000002a3 .LASF76
     /tmp/ccsY7LQ2.s:1458   .debug_loc:0000000000000085 .LLST1
     /tmp/ccsY7LQ2.s:1693   .debug_str:0000000000000547 .LASF77
     /tmp/ccsY7LQ2.s:1472   .debug_loc:00000000000000be .LLST2
     /tmp/ccsY7LQ2.s:89     .text:000000000000005c .LVL6
     /tmp/ccsY7LQ2.s:1633   .debug_str:00000000000002d4 .LASF78
     /tmp/ccsY7LQ2.s:1559   .debug_str:00000000000000b1 .LASF79
     /tmp/ccsY7LQ2.s:10     .text:0000000000000000 .LFB18
     /tmp/ccsY7LQ2.s:55     .text:0000000000000028 .LFE18
     /tmp/ccsY7LQ2.s:1504   .debug_loc:0000000000000118 .LLST0
     /tmp/ccsY7LQ2.s:1589   .debug_str:0000000000000186 .LASF81
     /tmp/ccsY7LQ2.s:1591   .debug_str:000000000000018b .LASF82
     /tmp/ccsY7LQ2.s:1705   .debug_str:00000000000005a9 .LASF83
     /tmp/ccsY7LQ2.s:29     .text:0000000000000010 .LBB4
     /tmp/ccsY7LQ2.s:46     .text:000000000000001c .LBE4
     /tmp/ccsY7LQ2.s:185    .text:00000000000000ec .LVL11
     /tmp/ccsY7LQ2.s:201    .text:0000000000000110 .LVL12
     /tmp/ccsY7LQ2.s:109    .text:000000000000006c .LVL7
     /tmp/ccsY7LQ2.s:125    .text:0000000000000090 .LVL8
     /tmp/ccsY7LQ2.s:64     .text:0000000000000028 .LVL2
     /tmp/ccsY7LQ2.s:87     .text:0000000000000054 .LVL5
     /tmp/ccsY7LQ2.s:78     .text:0000000000000040 .LVL3
     /tmp/ccsY7LQ2.s:85     .text:0000000000000050 .LVL4
     /tmp/ccsY7LQ2.s:14     .text:0000000000000000 .LVL0
     /tmp/ccsY7LQ2.s:44     .text:000000000000001c .LVL1
     /tmp/ccsY7LQ2.s:220    .debug_info:0000000000000000 .Ldebug_info0

NO UNDEFINED SYMBOLS
